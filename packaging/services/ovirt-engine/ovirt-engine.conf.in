# Please do not edit this file directly. It will be overwritten by upgrades.
# Edit or add files under @ENGINE_VARS@.d instead. See the file
# README there for details.
#
# These are the default values for the local configuration.
#

#
# Package information
#
PACKAGE_NAME="@PACKAGE_NAME@"
PACKAGE_VERSION="@PACKAGE_VERSION@"
PACKAGE_DISPLAY_VERSION="@DISPLAY_VERSION@"

#
# Comma separated list of keys
# not to be logged.
#
SENSITIVE_KEYS=""

#
# The location of the application server used by the engine:
#
JBOSS_HOME="@JBOSS_HOME@"
JBOSS_RUNTIME="@JBOSS_RUNTIME@"

#
# Important directories used by the engine:
#
ENGINE_ETC="@ENGINE_ETC@"
ENGINE_PKI="@ENGINE_PKI@"
ENGINE_LOG="@ENGINE_LOG@"
ENGINE_TMP="@ENGINE_TMP@"
ENGINE_USR="@ENGINE_USR@"
ENGINE_DOC="@ENGINE_DOC@"
ENGINE_VAR="@ENGINE_VAR@"
ENGINE_CACHE="@ENGINE_CACHE@"
ENGINE_MANUAL="${ENGINE_USR}/manual"

#
# A file created on init and removed on orderly shutdown
# Used to diagnose unexpected engine stop by the notification service.
#
ENGINE_UP_MARK="${ENGINE_VAR}/engine.up"

#
# Intervals for stoping the engine:
#
ENGINE_STOP_TIME=10
ENGINE_STOP_INTERVAL=1

#
# The names of the user and group that will execute the java
# virtual machine of the engine:
#
ENGINE_USER=@ENGINE_USER@
ENGINE_GROUP=@ENGINE_GROUP@

#
# These variables control the amount of memory used by the java
# virtual machine where the engine runs:
#
ENGINE_HEAP_MIN=2g
ENGINE_HEAP_MAX=4g

# If true, above params are enforced. Otherwise the python wrapper might
# change them if they seem too low or too high for the machine.
ENFORCE_ENGINE_HEAP_PARAMS=false

#
# Use this if you want to enable remote debugging of the engine java virtual
# machine (useful mainly for developers):
#
#   ENGINE_DEBUG_ADDRESS=ovirt.example.com:8787
#
# The address and port should be reachable from your debugger, so using
# localhost is not good unless you are running the engine and the debugger in
# the same machine.
#
ENGINE_DEBUG_ADDRESS=

#
# Specify JMX interface, can be loopback or public
#
ENGINE_JMX_INTERFACE=loopback

#
# Set this if you wish to write engine log to console as well.
#
ENGINE_LOG_TO_CONSOLE=false

#
# Set this if you wish deployment mechanism to be enabled.
# Should not be used in production.
#
ENGINE_DEPLOYMENT_SCANNER=false

#
# Change following to true if you want to enable garbage collection debug
# information (will be sent to the console.log file):
#
ENGINE_VERBOSE_GC=false

#
# Extra system properties to be added to the java virtual machine
# of the engine. Properties can be specified using the typical
# java syntax:
#
#   -Dmy.param=my.value
#   -Dmy.flag
#
# If the -D prefix is not used it will be automatically added, so
# the following is also valid:
#
#   my.param=my.value
#   my.flag
#
# If several properties need to be specified they should all go in
# the same line and separated by spaces:
#
#   -Dmy.param=my.value -Dmy.flag -Dyour.param=your.value
#
ENGINE_PROPERTIES=""
ENGINE_PROPERTIES="${ENGINE_PROPERTIES} java.awt.headless=true"
ENGINE_PROPERTIES="${ENGINE_PROPERTIES} sun.rmi.dgc.client.gcInterval=3600000 sun.rmi.dgc.server.gcInterval=3600000"
ENGINE_PROPERTIES="${ENGINE_PROPERTIES} jsse.enableSNIExtension=false"

#
# Extra Java arguments to be added to command-line.
#
ENGINE_JVM_ARGS=""
ENGINE_JVM_ARGS="${ENGINE_JVM_ARGS} -XX:+HeapDumpOnOutOfMemoryError"
ENGINE_JVM_ARGS="${ENGINE_JVM_ARGS} -XX:HeapDumpPath=\"${ENGINE_LOG}/dump\""

#
# Module path
#
# Colon separated list of paths.
#
# JBoss is always appended, cannot be appended here
# as it may be resolved to different value.
#
ENGINE_JAVA_MODULEPATH="${ENGINE_USR}/modules/common"

#
# Additional applications to be deployed in the instance of the
# application server started by the engine. This is a list of space
# separated files or directories that should exist under
# /usr/share/ovirt-engine:
#
ENGINE_APPS="engine.ear restapi.war apidoc.war"
ENGINE_URI=/ovirt-engine

#
# Flags to enable or disable the web server (the proxy) and the
# connectors of the application server:
#
ENGINE_HTTP_ENABLED=false
ENGINE_HTTPS_ENABLED=false
ENGINE_HTTP_PORT=8700
ENGINE_HTTPS_PORT=8701

ENGINE_AJP_ENABLED=false
ENGINE_AJP_PORT=8702

ENGINE_PROXY_ENABLED=false
ENGINE_PROXY_HTTP_PORT=80
ENGINE_PROXY_HTTPS_PORT=443

#
# A comma separated list of the SSL protocols supported by the engine
# when the HTTPS connector is enabled. The possible values are the
# following:
#
#   SSLv3
#   TLSv1
#   TLSv1.1
#   TLSv1.2
#
ENGINE_HTTPS_PROTOCOLS=SSLv3,TLSv1,TLSv1.1,TLSv1.2

#
# Engine host fully qualified domain name:
#
ENGINE_FQDN=localhost.localdomain

#
# Database connection details
#
SENSITIVE_KEYS="${SENSITIVE_KEYS},ENGINE_DB_PASSWORD"
ENGINE_DB_HOST="localhost"
ENGINE_DB_PORT="5432"
ENGINE_DB_USER="engine"
ENGINE_DB_PASSWORD=
ENGINE_DB_DATABASE="engine"
ENGINE_DB_SECURED="False"
ENGINE_DB_SECURED_VALIDATION="False"
ENGINE_DB_DRIVER=org.postgresql.Driver
ENGINE_DB_URL="jdbc:postgresql://${ENGINE_DB_HOST}:${ENGINE_DB_PORT}/${ENGINE_DB_DATABASE}?sslfactory=org.postgresql.ssl.NonValidatingFactory"

#
# DWH Database connection details
#
# Copied from ovirt-dwh:packaging/services/ovirt-engine-dwhd/ovirt-engine-dwhd.conf.in
# Configured by dwh engine-setup plugin. Added here mainly to filter the password.
SENSITIVE_KEYS="${SENSITIVE_KEYS},DWH_DB_PASSWORD"
DWH_DB_HOST="localhost"
DWH_DB_PORT="5432"
DWH_DB_USER=engine_history
DWH_DB_PASSWORD=
DWH_DB_DATABASE=ovirt_engine_history
DWH_DB_SECURED="False"
DWH_DB_SECURED_VALIDATION="False"
DWH_DB_DRIVER="org.postgresql.Driver"
DWH_DB_URL="jdbc:postgresql://${DWH_DB_HOST}:${DWH_DB_PORT}/${DWH_DB_DATABASE}?sslfactory=org.postgresql.ssl.NonValidatingFactory"

#
# Size of the database connection pool:
#
ENGINE_DB_MIN_CONNECTIONS=1
ENGINE_DB_MAX_CONNECTIONS=100

#
# Size of the database connection pool for non-JTA
# datasource used by Quartz
#
ENGINE_NON_JTA_DB_MIN_CONNECTIONS=1
ENGINE_NON_JTA_DB_MAX_CONNECTIONS=10

#
# Timeout value in milliseconds for stop checking if database
# connectivity is available (5 minutes at the moment):
#
ENGINE_DB_CONNECTION_TIMEOUT=300000

#
# Interval value in milliseconds for sleep between two subsequent
# database connectivity checks:
#
ENGINE_DB_CHECK_INTERVAL=1000

#
# PKI artifacts
#
SENSITIVE_KEYS="${SENSITIVE_KEYS},ENGINE_PKI_TRUST_STORE_PASSWORD,ENGINE_PKI_ENGINE_STORE_PASSWORD,ENGINE_EXTERNAL_PROVIDERS_TRUST_STORE_PASSWORD,ENGINE_HTTPS_PKI_TRUST_STORE_PASSWORD"
ENGINE_EXTERNAL_PROVIDERS_TRUST_STORE="${ENGINE_VAR}/external_truststore"
ENGINE_EXTERNAL_PROVIDERS_TRUST_STORE_TYPE=JKS
ENGINE_EXTERNAL_PROVIDERS_TRUST_STORE_PASSWORD=changeit
ENGINE_PKI_CA=${ENGINE_PKI}/ca.pem
ENGINE_PKI_ENGINE_CERT=${ENGINE_PKI}/certs/engine.cer
ENGINE_PKI_TRUST_STORE_TYPE=JKS
ENGINE_PKI_TRUST_STORE=${ENGINE_PKI}/.truststore
ENGINE_PKI_TRUST_STORE_PASSWORD=
ENGINE_HTTPS_PKI_TRUST_STORE_TYPE="${ENGINE_PKI_TRUST_STORE_TYPE}"
ENGINE_HTTPS_PKI_TRUST_STORE="${ENGINE_PKI_TRUST_STORE}"
ENGINE_HTTPS_PKI_TRUST_STORE_PASSWORD="${ENGINE_PKI_TRUST_STORE_PASSWORD}"
ENGINE_PKI_ENGINE_STORE_TYPE=PKCS12
ENGINE_PKI_ENGINE_STORE=${ENGINE_PKI}/keys/engine.p12
ENGINE_PKI_ENGINE_STORE_PASSWORD=
ENGINE_PKI_ENGINE_STORE_ALIAS=1

ENGINE_EXTENSION_PATH="${ENGINE_USR}/extensions.d:${ENGINE_ETC}/extensions.d"

#
# Disable extensions (override extension configuration)
#
# ENGINE_EXTENSION_ENABLED_<name>=false
#

#
# The extensions ignored by engine, but might be loaded and used by other modules like SSO
#
ENGINE_EXTENSIONS_IGNORED=".*?(Authz)"

#
# Engine (client) SSO configuration
#

SENSITIVE_KEYS="${SENSITIVE_KEYS},ENGINE_SSO_CLIENT_SECRET"

# Client id to use.
ENGINE_SSO_CLIENT_ID=

# Client password to use.
ENGINE_SSO_CLIENT_SECRET=

# Enable restapi nego using direct access. This config variable enables or disables the restapi negotiate authentication.
# If all restapi clients are RESTAPI/SDK v4 then this can be set to false. It is required to be set to true only for
# compatibility with RESTAPI/SDK v3.6 clients.
ENGINE_RESTAPI_NEGO=true

# SSO URI to use
ENGINE_SSO_SERVICE_URI="${ENGINE_URI}/sso"

# SSO URL visible for user agent.
ENGINE_SSO_AUTH_URL="https://${ENGINE_FQDN}${ENGINE_SSO_SERVICE_URI}"

# SSO service URL for direct communications.
ENGINE_SSO_SERVICE_URL="${ENGINE_SSO_AUTH_URL}"

# SSL protocol to use. Setting the protocol to TLS starts a negotiation with the server and picks the highest
# level of protocol supported by the server.
ENGINE_SSO_SERVICE_SSL_PROTOCOL=TLS

# Enable host verification.
ENGINE_SSO_SERVICE_SSL_VERIFY_HOST=true

# Enable chain verification
ENGINE_SSO_SERVICE_SSL_VERIFY_CHAIN=true

# Webadmin auth sequence
ENGINE_SSO_AUTH_SEQUENCE_webadmin=~

# User Portal auth sequence
ENGINE_SSO_AUTH_SEQUENCE_userportal=~

# Welcome auth sequence
ENGINE_SSO_AUTH_SEQUENCE_welcome=~

# SSO service is installed on engine host. This flag can be used to specify if the SSO service is installed on the
# same host as the engine or installed on a different host. If set to true the URL and port used to access engine is
# used to redirect to the login page. If set to false the value set in ENGINE_SSO_AUTH_URL is used to redirect user to
# login page.
ENGINE_SSO_INSTALLED_ON_ENGINE_HOST=true

# The maximum size of the pool of HTTP connections that the engine uses
# to communicate with the SSO service:
ENGINE_SSO_SERVICE_CLIENT_POOL_SIZE=10

# The maximum number of times a method will be retried when communicating with SSO.
ENGINE_SSO_SERVICE_CONNECTION_RETRY_COUNT=3

# The number of milliseconds after which a connection in the pool has to be validated when communicating with SSO.
ENGINE_SSO_SERVICE_CONNECTION_VALIDATE_AFTER_INACTIVITY=100

#
# SSO Configuration
#

# Maximum lifetime in seconds of a token
SSO_TOKEN_TIMEOUT=360000

# Interval in which housekeeping occurs in seconds.
SSO_HOUSE_KEEPING_INTERVAL=60

# Login sequence to use.
# B - Basic enforce.
# b - Basic accept.
# N - Negotiate.
# I - Internal.
SSO_AUTH_LOGIN_SEQUENCE=NI

# Login sequence to use for token http login.
# b - Basic accept.
# N - Negotiate.
SSO_TOKEN_HTTP_LOGIN_SEQUENCE=Nb

# Enforce OAuth2 callback prefix. Should not be modified.
SSO_CALLBACK_PREFIX_CHECK=true

# Read Timeout for outgoing communications.
SSO_CALLBACK_READ_TIMEOUT=0

# Connect Timeout for outgoing communications.
SSO_CALLBACK_CONNECT_TIMEOUT=0

# The maximum number of times a method will be retried by SSO when notifying callback of logout event.
SSO_CALLBACK_CONNECTION_RETRY_COUNT=3

# The number of milli seconds after which a connection in the pool has to be validated notifying callback of logout
# event.
SSO_CALLBACK_CONNECTION_VALIDATE_AFTER_INACTIVITY=100

# The URL of the engine
SSO_ENGINE_URL="http://${ENGINE_FQDN}${ENGINE_URI}"

# Alternate FQDNs that can be used to access engine. A space separated list of alternate names that can be used to
# access engine. Example: SSO_ALTERNATE_ENGINE_FQDNS="alias1.example.com alias2.example.com". It's possible to also
# add IP addresses of engine host, but using IP addresses instead of DNS names is not considered to be a good practice.
SSO_ALTERNATE_ENGINE_FQDNS=""

# The maximum size of the pool of HTTP connections that the SSO service
# uses to communicate with the engine:
SSO_CALLBACK_CLIENT_POOL_SIZE=10

#
# Comma separated list of supported versions of the API. When the user
# selects a version of the API that isn't in this list the server will
# return an HTTP error response.
#
ENGINE_API_SUPPORTED_VERSIONS="3, 4"

#
# Default version of the API, which will be used when the caller doesn't
# explicitly select a specific version.
#
ENGINE_API_DEFAULT_VERSION="4"

#
# Comma separated list of versions of the API that are deprecated. Each
# deprecated version is specified by three values, separated by colons.
# The first value is the version of the API that is deprecated. The
# second value is the version of the engine where that version of the
# API was deprecated. The third value is the version of the engine where
# that version of the API will be removed. For example, the following
# text:
#
#   3:4.0:4.2
#
# Means that version 3 of the API was deprecated in version 4.0 of the
# engine and will be removed in version 4.2 of the engine.
#
# When the engine detects a request that is using a deprecated version
# of the API it will send a message to the audit log explaining it.
#
ENGINE_API_DEPRECATED_VERSIONS="3:4.0:4.2"

#
# This flags indicates if 'filtering' should be enabled by default for
# users that aren't administartors.
#
ENGINE_API_FILTER_BY_DEFAULT="true"

#
# Specify custom krb5.conf file (if empty the default is /etc/krb5.conf)
#
AAA_KRB5_CONF_FILE=

#
# All following options are used for JAAS 'oVirtKerbAAA' client configuration
#

#
# Enable/disable usage of ticket cache file for authentication
#
AAA_JAAS_USE_TICKET_CACHE=false

#
# Specify custom ticket cache file (if empty the default is /tmp/krb5cc_${UID} where UID if used id of ovirt user)
#
AAA_JAAS_TICKET_CACHE_FILE=

#
# Enable/disable usage of keytab file for authentication
#
AAA_JAAS_USE_KEYTAB=false

#
# Specify custom keytab file (if empty the default is ${OVIRT_HOME}/krb5.keytab where OVIRT_HOME is home directory of ovirt user)
#
AAA_JAAS_KEYTAB_FILE=

# Specify username (for example "testuser") or service name (for example
# "host/host1.example.com") to set principal to use with ticket cache or keytab
#
AAA_JAAS_PRINCIPAL_NAME=

#
# Enable/disable updating the dashboard DB query caches at regular intervals.
#
DASHBOARD_CACHE_UPDATE=true

#
# Specify the interval duration, in seconds, to use for oVirt Dashboard's DB utilization query cache updater.  The utilization
# queries select from the DWH tables and can be an expensive query in large scale environments.
#
DASHBOARD_UTILIZATION_CACHE_UPDATE_INTERVAL=300

#
# Specify the interval duration, in seconds, to use for oVirt Dashboard's DB inventory query cache updater.  The inventory
# queries select from standard engine tables.
#
DASHBOARD_INVENTORY_CACHE_UPDATE_INTERVAL=60

#
# Quartz thread pool pool class
# We can use two pools:
# - provided by quartz: org.quartz.simpl.SimpleThreadPool
# - based on ThreadPoolExecutor: org.ovirt.engine.core.utils.timer.SchedulerThreadPool
#
ENGINE_SCHEDULER_POOL_CLASS=org.ovirt.engine.core.utils.timer.SchedulerThreadPool

#
# Number of threads used in quartz thread pool
#
ENGINE_SCHEDULER_POOL_THREAD_SIZE=100

#
# Size of the queue used by quartz thread pool
#
ENGINE_SCHEDULER_POOL_QUEUE_SIZE=350

#
# Define rejection policy for the pool when a task queue is full.
# When 'false' is set it will block if the queue is full.
# When 'true' is set it would reject the task.
#
ENGINE_SCHEDULER_POOL_REJECT_POLICY=false
