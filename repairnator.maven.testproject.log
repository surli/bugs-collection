[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Spring MVC to RAML Synchronizer
[INFO] Spring MVC to RAML Synchronizer Annotations
[INFO] Spring MVC to RAML Synchronizer Parser
[INFO] Spring MVC to RAML Synchronizer Maven Plugin
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer Annotations 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ springmvc-raml-annotations ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/phoenixnap/springmvc-raml-plugin/185748877/springmvc-raml-annotations/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ springmvc-raml-annotations ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ springmvc-raml-annotations ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /root/workspace/phoenixnap/springmvc-raml-plugin/185748877/springmvc-raml-annotations/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ springmvc-raml-annotations ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ springmvc-raml-annotations ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer Parser 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ springmvc-raml-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ springmvc-raml-parser ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ springmvc-raml-parser ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 69 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ springmvc-raml-parser ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ springmvc-raml-parser ---
[INFO] Surefire report directory: /root/workspace/phoenixnap/springmvc-raml-plugin/185748877/springmvc-raml-parser/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest
2017-08-24 18:09:00 DEBUG [rules.RequestBodyWithValidationTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.UpdateBaseRequest;
import com.gen.test.model.UpdateBaseResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping("/api/base")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<UpdateBaseResponse> updateBase(
        @Valid
        @RequestBody
        UpdateBaseRequest updateBaseRequest);

}

2017-08-24 18:09:00 DEBUG [rules.RequestBodyWithValidationTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.UpdateBaseRequest;
import com.gen.test.model.UpdateBaseResponse;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping("/api/base")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public UpdateBaseResponse updateBase(
        @Valid
        @RequestBody
        UpdateBaseRequest updateBaseRequest) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.RequestBodyWithValidationTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import com.gen.test.model.UpdateBaseRequest;
import com.gen.test.model.UpdateBaseResponse;
import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<UpdateBaseResponse> updateBase(UpdateBaseRequest updateBaseRequest);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import com.gen.test.model.UpdateBaseRequest;
import com.gen.test.model.UpdateBaseResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping("/api/base")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<UpdateBaseResponse> updateBase(
        @Valid
        @RequestBody
        UpdateBaseRequest updateBaseRequest) {
        return this.baseControllerDelegate.updateBase(updateBaseRequest);
    }

}

Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.674 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRulesTest
2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------MyClass.java-----------------------------------
import org.springframework.web.bind.annotation.RequestMapping;

@RequestMapping(value = "/api/base", produces = "application/json")
public class MyClass {


}

2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------MyClass.java-----------------------------------
import java.io.Serializable;
import org.springframework.beans.factory.annotation.Autowired;

public class MyClass
    implements Serializable
{

    @Autowired
    private Serializable delegate;

}

2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------MyClass.java-----------------------------------
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

public class MyClass {


    @RequestMapping(value = "", method = RequestMethod.GET)
    public Object getBase() {
    }

}

2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------TestController.java-----------------------------------
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;

public class TestController {


    public ResponseEntity getBaseById(
        @PathVariable
        String id) {
    }

}

2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------MyClass.java-----------------------------------
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;

public class MyClass {


    public Object getBase(String id) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

}

2017-08-24 18:09:00 DEBUG [spring.SpringRulesTest] - -----------------------------------MyClass.java-----------------------------------
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MyClass {


}

Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.052 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerMethodSignatureRuleTest
2017-08-24 18:09:00 DEBUG [basic.ControllerMethodSignatureRuleTest] - -----------------------------------MyInterface.java-----------------------------------
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;

public interface MyInterface {


    public ResponseEntity<NamedResponseType> getBaseById(String id) {
    }

}

2017-08-24 18:09:00 DEBUG [basic.ControllerMethodSignatureRuleTest] - -----------------------------------MyInterface.java-----------------------------------
import org.springframework.http.ResponseEntity;

public interface MyInterface {


    public ResponseEntity<?> getBase() {
    }

}

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRuleTest
2017-08-24 18:09:00 DEBUG [basic.ClassFieldDeclarationRuleTest] - -----------------------------------MyClass.java-----------------------------------
import java.io.Serializable;

public class MyClass
    implements Serializable
{

    private String field;

}

2017-08-24 18:09:00 DEBUG [basic.ClassFieldDeclarationRuleTest] - -----------------------------------MyClass.java-----------------------------------
import java.io.Serializable;
import org.springframework.beans.factory.annotation.Value;

public class MyClass
    implements Serializable
{

    @Value("${sample}")
    private String field;

}

2017-08-24 18:09:00 DEBUG [basic.ClassFieldDeclarationRuleTest] - -----------------------------------MyClass.java-----------------------------------
import java.io.Serializable;
import org.springframework.beans.factory.annotation.Autowired;

public class MyClass
    implements Serializable
{

    @Autowired
    private String field;

}

Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.DelegatingMethodBodyRuleTest
2017-08-24 18:09:00 DEBUG [basic.DelegatingMethodBodyRuleTest] - -----------------------------------TestClass.java-----------------------------------

public class TestClass {


    public Object getBaseById(String id) {
        return this.controllerDelegate.getBaseById(id);
    }

}

2017-08-24 18:09:00 DEBUG [basic.DelegatingMethodBodyRuleTest] - -----------------------------------TestClass.java-----------------------------------

public class TestClass {


    public Object getBase() {
        return this.delegate.getBase();
    }

}

2017-08-24 18:09:00 DEBUG [basic.DelegatingMethodBodyRuleTest] - -----------------------------------TestClass.java-----------------------------------

public class TestClass {


    public Object getBase() {
        return this.delegate.getBase();
    }

}

2017-08-24 18:09:00 DEBUG [basic.DelegatingMethodBodyRuleTest] - -----------------------------------TestClass.java-----------------------------------

public class TestClass {


    public Object getBase() {
        return this.controllerDelegate.getBase();
    }

}

Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerInterfaceDeclarationRuleTest
2017-08-24 18:09:00 DEBUG [basic.ControllerInterfaceDeclarationRuleTest] - -----------------------------------BaseController.java-----------------------------------

public interface BaseController {


}

2017-08-24 18:09:00 DEBUG [basic.ControllerInterfaceDeclarationRuleTest] - -----------------------------------BaseController.java-----------------------------------

public interface BaseController {


}

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassCommentRuleTest
2017-08-24 18:09:00 DEBUG [basic.ClassCommentRuleTest] - -----------------------------------BaseController.java-----------------------------------


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public class BaseController {


}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ImplementMeMethodBodyRuleTest
2017-08-24 18:09:00 DEBUG [basic.ImplementMeMethodBodyRuleTest] - -----------------------------------TestController.java-----------------------------------
import org.springframework.http.ResponseEntity;

public class TestController {


    public ResponseEntity getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodParamsRuleTest
2017-08-24 18:09:00 DEBUG [basic.MethodParamsRuleTest] - -----------------------------------TestController.java-----------------------------------
import org.springframework.http.ResponseEntity;

public class TestController {


    public ResponseEntity getBaseById(String id) {
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ImplementsControllerInferfaceRuleTest
2017-08-24 18:09:00 DEBUG [basic.ImplementsControllerInferfaceRuleTest] - -----------------------------------MyClass.java-----------------------------------

public class MyClass
    implements MyInterface
{


}
-----------------------------------MyInterface.java-----------------------------------

public interface MyInterface {


}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.MethodCommentRuleTest
2017-08-24 18:09:00 DEBUG [basic.MethodCommentRuleTest] - -----------------------------------TestController.java-----------------------------------
import org.springframework.http.ResponseEntity;

public class TestController {


    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity getBaseById() {
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.PackageRuleTest
2017-08-24 18:09:00 DEBUG [basic.PackageRuleTest] - 
2017-08-24 18:09:00 DEBUG [basic.PackageRuleTest] - 
2017-08-24 18:09:00 DEBUG [basic.PackageRuleTest] - 
2017-08-24 18:09:00 DEBUG [basic.PackageRuleTest] - 
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.basic.ControllerClassDeclarationRuleTest
2017-08-24 18:09:00 DEBUG [basic.ControllerClassDeclarationRuleTest] - -----------------------------------BaseController.java-----------------------------------

public class BaseController {


}

2017-08-24 18:09:00 DEBUG [basic.ControllerClassDeclarationRuleTest] - -----------------------------------BaseController.java-----------------------------------

public class BaseController {


}

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest
2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase() {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader);
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}

Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue61RulesTest
2017-08-24 18:09:00 INFO [naming.SchemaHelper] - Loading referenced schema sample_unit.json
2017-08-24 18:09:00 DEBUG [rules.Issue61RulesTest] - -----------------------------------com.gen.test.SampleUnitClient.java-----------------------------------

package com.gen.test;

import java.util.List;
import org.springframework.http.ResponseEntity;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface SampleUnitClient {


    /**
     * Creates a sample unit
     * 
     * @param sampleUnit The Request Body Payload
     */
    public ResponseEntity<?> createSampleUnit(com.gen.test.model.SampleUnit sampleUnit);

    /**
     * Retrieves  samples
     * 
     */
    public ResponseEntity<List<com.gen.test.model.SampleUnit>> getSampleUnits();

}
-----------------------------------com.gen.test.SampleUnitClientImpl.java-----------------------------------

package com.gen.test;

import java.util.ArrayList;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * A collection of samples
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Component
public class SampleUnitClientImpl
    implements SampleUnitClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * Creates a sample unit
     * 
     */
    public ResponseEntity<?> createSampleUnit(com.gen.test.model.SampleUnit sampleUnit) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        httpHeaders.setContentType(MediaType.valueOf("application/json"));
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/sample_units");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(sampleUnit, httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.POST, httpEntity, Object.class);
    }

    /**
     * Retrieves  samples
     * 
     */
    public ResponseEntity<List<com.gen.test.model.SampleUnit>> getSampleUnits() {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/sample_units");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        class _P extends org.springframework.core.ParameterizedTypeReference<java.util.List<com.gen.test.model.SampleUnit>>{};
        ParameterizedTypeReference<List<com.gen.test.model.SampleUnit>> typeReference = new _P();
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, typeReference);
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.SpringFeignClientRulesTest
2017-08-24 18:09:00 DEBUG [rules.SpringFeignClientRulesTest] - -----------------------------------com.gen.test.BaseClient.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


/**
 * Some description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@FeignClient(url = "/api/base", name = "baseClient")
public interface BaseClient {


    /**
     * Get all objects
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity getBase(
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "someDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "3")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-Optional-Header", required = false, defaultValue = "2")
        Long xOptionalHeader,
        @RequestHeader(name = "X-Required-Header")
        String xRequiredHeader);

}

2017-08-24 18:09:00 DEBUG [rules.SpringFeignClientRulesTest] - -----------------------------------com.gen.test.SongClient.java-----------------------------------

package com.gen.test;

import java.util.List;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;


/**
 * Songs services
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@FeignClient(url = "/api/songs", name = "songClient")
public interface SongClient {


    /**
     * Gets all songs
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<List<com.gen.test.model.Song>> getSongs();

    /**
     * Creates new song
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<com.gen.test.model.Song> createSong(
        @javax.validation.Valid
        @org.springframework.web.bind.annotation.RequestBody
        com.gen.test.model.Song song);

    /**
     * Gets song by id
     * 
     */
    @RequestMapping(value = "/{songId}", method = RequestMethod.GET)
    public ResponseEntity<com.gen.test.model.Song> getSongById(
        @PathVariable
        String songId);

    /**
     * Updates song
     * 
     */
    @RequestMapping(value = "/{songId}", method = RequestMethod.PUT)
    public ResponseEntity<com.gen.test.model.Song> updateSongById(
        @PathVariable
        String songId,
        @javax.validation.Valid
        @org.springframework.web.bind.annotation.RequestBody
        com.gen.test.model.Song song);

    /**
     * Deletes song
     * 
     */
    @RequestMapping(value = "/{songId}", method = RequestMethod.DELETE)
    public ResponseEntity deleteSongById(
        @PathVariable
        String songId);

}

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest
2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public Callable<ResponseEntity<?>> getBase();

    /**
     * Get base entity by ID
     * 
     */
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(String id);

    /**
     * No description
     * 
     */
    public Callable<ResponseEntity<?>> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase() {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader);
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase();

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<ResponseEntity<NamedResponseType>> getBaseById(
        @PathVariable
        String id);

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader);

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.concurrent.Callable;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getBase() {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Callable<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public Callable<ResponseEntity<?>> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase() {
        return this.baseControllerDelegate.getBase();
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id) {
        return this.baseControllerDelegate.getBaseById(id);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader);
    }

}

Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue32RulesTest
2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
public interface FileController {


    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<com.gen.test.model.Www> createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www);

}

2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/files", produces = "application/json")
public class FileController {


    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    @ResponseBody
    public com.gen.test.model.Www createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
public class FileController {


    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public com.gen.test.model.Www createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface FileController {


    /**
     * Create file.
     * 
     */
    public ResponseEntity<com.gen.test.model.Www> createFile(com.gen.test.model.Www www);

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/files", produces = "application/json")
public class FileControllerDecorator
    implements FileController
{

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    @ResponseBody
    public ResponseEntity<com.gen.test.model.Www> createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www) {
        return this.fileControllerDelegate.createFile(www);
    }

}

2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/files", produces = "application/json")
public interface FileController {


    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    @ResponseBody
    public ResponseEntity<com.gen.test.model.Www> createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www);

}

2017-08-24 18:09:00 DEBUG [rules.Issue32RulesTest] - -----------------------------------com.gen.test.FileController.java-----------------------------------

package com.gen.test;

import org.springframework.http.ResponseEntity;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface FileController {


    /**
     * Create file.
     * 
     */
    public ResponseEntity<com.gen.test.model.Www> createFile(com.gen.test.model.Www www);

}
-----------------------------------com.gen.test.FileControllerDecorator.java-----------------------------------

package com.gen.test;

import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


/**
 * No description
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/files", produces = "application/json")
public class FileControllerDecorator
    implements FileController
{

    @Autowired
    private FileController fileControllerDelegate;

    /**
     * Create file.
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<com.gen.test.model.Www> createFile(
        @Valid
        @RequestBody
        com.gen.test.model.Www www) {
        return this.fileControllerDelegate.createFile(www);
    }

}

Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.pojogen.JsonSchema2PojoTest
2017-08-24 18:09:00 INFO [naming.SchemaHelper] - Loading referenced schema classpath:pojogen/nested.schema
2017-08-24 18:09:00 DEBUG [pojogen.JsonSchema2PojoTest] - -----------------------------------AirCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class AirCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public AirCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public AirCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public AirCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof AirCapacity) == false) {
            return false;
        }
        AirCapacity rhs = ((AirCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------FuelCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class FuelCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public FuelCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public FuelCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public FuelCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof FuelCapacity) == false) {
            return false;
        }
        FuelCapacity rhs = ((FuelCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------WaterCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class WaterCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public WaterCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public WaterCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public WaterCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof WaterCapacity) == false) {
            return false;
        }
        WaterCapacity rhs = ((WaterCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------javaName2nd.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "name",
    "location",
    "model",
    "enabled",
    "waterCapacity",
    "airCapacity",
    "fuelCapacity"
})
public class javaName2nd {

    @JsonProperty("name")
    private String name;
    @JsonProperty("location")
    private String location;
    @JsonProperty("model")
    private String model;
    @JsonProperty("enabled")
    private Boolean enabled;
    @JsonProperty("waterCapacity")
    private WaterCapacity waterCapacity;
    @JsonProperty("airCapacity")
    private AirCapacity airCapacity;
    @JsonProperty("fuelCapacity")
    private FuelCapacity fuelCapacity;

    /**
     * 
     * @return
     *     The name
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * 
     * @param name
     *     The name
     */
    @JsonProperty("name")
    public void setName(String name) {
        this.name = name;
    }

    public javaName2nd withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * 
     * @return
     *     The location
     */
    @JsonProperty("location")
    public String getLocation() {
        return location;
    }

    /**
     * 
     * @param location
     *     The location
     */
    @JsonProperty("location")
    public void setLocation(String location) {
        this.location = location;
    }

    public javaName2nd withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * 
     * @return
     *     The model
     */
    @JsonProperty("model")
    public String getModel() {
        return model;
    }

    /**
     * 
     * @param model
     *     The model
     */
    @JsonProperty("model")
    public void setModel(String model) {
        this.model = model;
    }

    public javaName2nd withModel(String model) {
        this.model = model;
        return this;
    }

    /**
     * 
     * @return
     *     The enabled
     */
    @JsonProperty("enabled")
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * 
     * @param enabled
     *     The enabled
     */
    @JsonProperty("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public javaName2nd withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * 
     * @return
     *     The waterCapacity
     */
    @JsonProperty("waterCapacity")
    public WaterCapacity getWaterCapacity() {
        return waterCapacity;
    }

    /**
     * 
     * @param waterCapacity
     *     The waterCapacity
     */
    @JsonProperty("waterCapacity")
    public void setWaterCapacity(WaterCapacity waterCapacity) {
        this.waterCapacity = waterCapacity;
    }

    public javaName2nd withWaterCapacity(WaterCapacity waterCapacity) {
        this.waterCapacity = waterCapacity;
        return this;
    }

    /**
     * 
     * @return
     *     The airCapacity
     */
    @JsonProperty("airCapacity")
    public AirCapacity getAirCapacity() {
        return airCapacity;
    }

    /**
     * 
     * @param airCapacity
     *     The airCapacity
     */
    @JsonProperty("airCapacity")
    public void setAirCapacity(AirCapacity airCapacity) {
        this.airCapacity = airCapacity;
    }

    public javaName2nd withAirCapacity(AirCapacity airCapacity) {
        this.airCapacity = airCapacity;
        return this;
    }

    /**
     * 
     * @return
     *     The fuelCapacity
     */
    @JsonProperty("fuelCapacity")
    public FuelCapacity getFuelCapacity() {
        return fuelCapacity;
    }

    /**
     * 
     * @param fuelCapacity
     *     The fuelCapacity
     */
    @JsonProperty("fuelCapacity")
    public void setFuelCapacity(FuelCapacity fuelCapacity) {
        this.fuelCapacity = fuelCapacity;
    }

    public javaName2nd withFuelCapacity(FuelCapacity fuelCapacity) {
        this.fuelCapacity = fuelCapacity;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(name).append(location).append(model).append(enabled).append(waterCapacity).append(airCapacity).append(fuelCapacity).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof javaName2nd) == false) {
            return false;
        }
        javaName2nd rhs = ((javaName2nd) other);
        return new EqualsBuilder().append(name, rhs.name).append(location, rhs.location).append(model, rhs.model).append(enabled, rhs.enabled).append(waterCapacity, rhs.waterCapacity).append(airCapacity, rhs.airCapacity).append(fuelCapacity, rhs.fuelCapacity).isEquals();
    }

}

2017-08-24 18:09:00 INFO [naming.SchemaHelper] - Loading referenced schema pojogen/B.json
2017-08-24 18:09:00 DEBUG [pojogen.JsonSchema2PojoTest] - -----------------------------------com.test.B.java-----------------------------------

package com.test;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "id",
    "stuff"
})
public class B {

    @JsonProperty("id")
    private Integer id;
    @JsonProperty("stuff")
    private Integer stuff;

    /**
     * 
     * @return
     *     The id
     */
    @JsonProperty("id")
    public Integer getId() {
        return id;
    }

    /**
     * 
     * @param id
     *     The id
     */
    @JsonProperty("id")
    public void setId(Integer id) {
        this.id = id;
    }

    public B withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * 
     * @return
     *     The stuff
     */
    @JsonProperty("stuff")
    public Integer getStuff() {
        return stuff;
    }

    /**
     * 
     * @param stuff
     *     The stuff
     */
    @JsonProperty("stuff")
    public void setStuff(Integer stuff) {
        this.stuff = stuff;
    }

    public B withStuff(Integer stuff) {
        this.stuff = stuff;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(id).append(stuff).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof B) == false) {
            return false;
        }
        B rhs = ((B) other);
        return new EqualsBuilder().append(id, rhs.id).append(stuff, rhs.stuff).isEquals();
    }

}

2017-08-24 18:09:00 DEBUG [pojogen.JsonSchema2PojoTest] - -----------------------------------AirCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class AirCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public AirCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public AirCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public AirCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof AirCapacity) == false) {
            return false;
        }
        AirCapacity rhs = ((AirCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------FuelCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class FuelCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public FuelCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public FuelCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public FuelCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof FuelCapacity) == false) {
            return false;
        }
        FuelCapacity rhs = ((FuelCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------WaterCapacity.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "unit",
    "used",
    "limit"
})
public class WaterCapacity {

    @JsonProperty("unit")
    private String unit;
    @JsonProperty("used")
    private Integer used;
    @JsonProperty("limit")
    private Integer limit;

    /**
     * 
     * @return
     *     The unit
     */
    @JsonProperty("unit")
    public String getUnit() {
        return unit;
    }

    /**
     * 
     * @param unit
     *     The unit
     */
    @JsonProperty("unit")
    public void setUnit(String unit) {
        this.unit = unit;
    }

    public WaterCapacity withUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * 
     * @return
     *     The used
     */
    @JsonProperty("used")
    public Integer getUsed() {
        return used;
    }

    /**
     * 
     * @param used
     *     The used
     */
    @JsonProperty("used")
    public void setUsed(Integer used) {
        this.used = used;
    }

    public WaterCapacity withUsed(Integer used) {
        this.used = used;
        return this;
    }

    /**
     * 
     * @return
     *     The limit
     */
    @JsonProperty("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * 
     * @param limit
     *     The limit
     */
    @JsonProperty("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public WaterCapacity withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(unit).append(used).append(limit).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof WaterCapacity) == false) {
            return false;
        }
        WaterCapacity rhs = ((WaterCapacity) other);
        return new EqualsBuilder().append(unit, rhs.unit).append(used, rhs.used).append(limit, rhs.limit).isEquals();
    }

}
-----------------------------------javaName2nd.java-----------------------------------
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "name",
    "location",
    "model",
    "enabled",
    "waterCapacity",
    "airCapacity",
    "fuelCapacity"
})
public class javaName2nd {

    @JsonProperty("name")
    private String name;
    @JsonProperty("location")
    private String location;
    @JsonProperty("model")
    private String model;
    @JsonProperty("enabled")
    private Boolean enabled;
    @JsonProperty("waterCapacity")
    private WaterCapacity waterCapacity;
    @JsonProperty("airCapacity")
    private AirCapacity airCapacity;
    @JsonProperty("fuelCapacity")
    private FuelCapacity fuelCapacity;

    /**
     * 
     * @return
     *     The name
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * 
     * @param name
     *     The name
     */
    @JsonProperty("name")
    public void setName(String name) {
        this.name = name;
    }

    public javaName2nd withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * 
     * @return
     *     The location
     */
    @JsonProperty("location")
    public String getLocation() {
        return location;
    }

    /**
     * 
     * @param location
     *     The location
     */
    @JsonProperty("location")
    public void setLocation(String location) {
        this.location = location;
    }

    public javaName2nd withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * 
     * @return
     *     The model
     */
    @JsonProperty("model")
    public String getModel() {
        return model;
    }

    /**
     * 
     * @param model
     *     The model
     */
    @JsonProperty("model")
    public void setModel(String model) {
        this.model = model;
    }

    public javaName2nd withModel(String model) {
        this.model = model;
        return this;
    }

    /**
     * 
     * @return
     *     The enabled
     */
    @JsonProperty("enabled")
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * 
     * @param enabled
     *     The enabled
     */
    @JsonProperty("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public javaName2nd withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * 
     * @return
     *     The waterCapacity
     */
    @JsonProperty("waterCapacity")
    public WaterCapacity getWaterCapacity() {
        return waterCapacity;
    }

    /**
     * 
     * @param waterCapacity
     *     The waterCapacity
     */
    @JsonProperty("waterCapacity")
    public void setWaterCapacity(WaterCapacity waterCapacity) {
        this.waterCapacity = waterCapacity;
    }

    public javaName2nd withWaterCapacity(WaterCapacity waterCapacity) {
        this.waterCapacity = waterCapacity;
        return this;
    }

    /**
     * 
     * @return
     *     The airCapacity
     */
    @JsonProperty("airCapacity")
    public AirCapacity getAirCapacity() {
        return airCapacity;
    }

    /**
     * 
     * @param airCapacity
     *     The airCapacity
     */
    @JsonProperty("airCapacity")
    public void setAirCapacity(AirCapacity airCapacity) {
        this.airCapacity = airCapacity;
    }

    public javaName2nd withAirCapacity(AirCapacity airCapacity) {
        this.airCapacity = airCapacity;
        return this;
    }

    /**
     * 
     * @return
     *     The fuelCapacity
     */
    @JsonProperty("fuelCapacity")
    public FuelCapacity getFuelCapacity() {
        return fuelCapacity;
    }

    /**
     * 
     * @param fuelCapacity
     *     The fuelCapacity
     */
    @JsonProperty("fuelCapacity")
    public void setFuelCapacity(FuelCapacity fuelCapacity) {
        this.fuelCapacity = fuelCapacity;
    }

    public javaName2nd withFuelCapacity(FuelCapacity fuelCapacity) {
        this.fuelCapacity = fuelCapacity;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(name).append(location).append(model).append(enabled).append(waterCapacity).append(airCapacity).append(fuelCapacity).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof javaName2nd) == false) {
            return false;
        }
        javaName2nd rhs = ((javaName2nd) other);
        return new EqualsBuilder().append(name, rhs.name).append(location, rhs.location).append(model, rhs.model).append(enabled, rhs.enabled).append(waterCapacity, rhs.waterCapacity).append(airCapacity, rhs.airCapacity).append(fuelCapacity, rhs.fuelCapacity).isEquals();
    }

}

2017-08-24 18:09:00 INFO [naming.SchemaHelper] - Loading referenced schema pojogen/B.json
2017-08-24 18:09:00 DEBUG [pojogen.JsonSchema2PojoTest] - -----------------------------------com.test.B.java-----------------------------------

package com.test;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "id",
    "stuff"
})
public class B {

    @JsonProperty("id")
    private Integer id;
    @JsonProperty("stuff")
    private Integer stuff;

    /**
     * 
     * @return
     *     The id
     */
    @JsonProperty("id")
    public Integer getId() {
        return id;
    }

    /**
     * 
     * @param id
     *     The id
     */
    @JsonProperty("id")
    public void setId(Integer id) {
        this.id = id;
    }

    public B withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * 
     * @return
     *     The stuff
     */
    @JsonProperty("stuff")
    public Integer getStuff() {
        return stuff;
    }

    /**
     * 
     * @param stuff
     *     The stuff
     */
    @JsonProperty("stuff")
    public void setStuff(Integer stuff) {
        this.stuff = stuff;
    }

    public B withStuff(Integer stuff) {
        this.stuff = stuff;
        return this;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(id).append(stuff).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof B) == false) {
            return false;
        }
        B rhs = ((B) other);
        return new EqualsBuilder().append(id, rhs.id).append(stuff, rhs.stuff).isEquals();
    }

}

Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest
2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBase(httpHeaders);
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader, httpHeaders);
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring3ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders);

}

Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesTest
2017-08-24 18:09:00 DEBUG [rules.Spring4RestTemplateClientRulesTest] - -----------------------------------com.gen.test.BaseClient.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseClient {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase();

    /**
     * Get base entity by ID
     * 
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id);

    /**
     * No description
     * 
     * @param optionalQueryParam 
     * @param xAnotherHeader 
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2 
     * @param xMyHeader 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase() {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader) {
        HttpHeaders httpHeaders = new HttpHeaders();
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRulesHtppHeadersTest
2017-08-24 18:09:00 DEBUG [rules.Spring4RestTemplateClientRulesHtppHeadersTest] - -----------------------------------com.gen.test.BaseClient.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseClient {


    /**
     * No description
     * 
     * @param httpHeaders The HTTP headers for the request
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     * 
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     * 
     * @param optionalQueryParam 
     * @param xAnotherHeader 
     * @param httpHeaders The HTTP headers for the request
     * @param id 
     * @param requiredQueryParam 
     * @param optionalQueryParam2 
     * @param xMyHeader 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseClientImpl.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponents;
import org.springframework.web.util.UriComponentsBuilder;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Component
public class BaseClientImpl
    implements BaseClient
{

    @Autowired
    private RestTemplate restTemplate;
    @Value("${client.url}")
    private String baseUrl;

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        String url = baseUrl.concat("/base/{id}");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, NamedResponseType.class);
    }

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders) {
        //  Add Accepts Headers and Body Content-Type
        ArrayList<MediaType> acceptsList = new ArrayList<MediaType>();
        acceptsList.add(MediaType.valueOf("application/json"));
        httpHeaders.setAccept(acceptsList);
        if (xMyHeader!= null) {
            httpHeaders.add("X-My-Header", xMyHeader.toString());
        }
        if (xAnotherHeader!= null) {
            httpHeaders.add("X-Another-Header", xAnotherHeader.toString());
        }
        String url = baseUrl.concat("/base/{id}/elements");
        UriComponentsBuilder builder = UriComponentsBuilder.fromHttpUrl(url).queryParam("requiredQueryParam", requiredQueryParam).queryParam("optionalQueryParam", optionalQueryParam).queryParam("optionalQueryParam2", optionalQueryParam2);
        UriComponents uriComponents = builder.build();
        HttpEntity httpEntity = new HttpEntity(httpHeaders);
        Map<String, Object> uriParamMap = new HashMap();
        uriParamMap.put("id", id);
        uriComponents = uriComponents.expand(uriParamMap);
        return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, Object.class);
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Issue76RulesTest
2017-08-24 18:09:00 DEBUG [rules.Issue76RulesTest] - 
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest
2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public interface BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders);

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders);

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public NamedResponseType getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

2017-08-24 18:09:00 DEBUG [rules.Spring4ControllerRulesHttpHeadersTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
public interface BaseController {


    /**
     * No description
     * 
     */
    public ResponseEntity<?> getBase(HttpHeaders httpHeaders);

    /**
     * Get base entity by ID
     * 
     */
    public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);

    /**
     * No description
     * 
     */
    public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);

}
-----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------

package com.gen.test;

import java.math.BigDecimal;
import com.gen.test.model.NamedResponseType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@RestController
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseControllerDecorator
    implements BaseController
{

    @Autowired
    private BaseController baseControllerDelegate;

    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.GET)
    public ResponseEntity<?> getBase(
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBase(httpHeaders);
    }

    /**
     * Get base entity by ID
     * 
     */
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ResponseEntity<NamedResponseType> getBaseById(
        @PathVariable
        String id,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getBaseById(id, httpHeaders);
    }

    /**
     * No description
     * 
     */
    @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)
    public ResponseEntity<?> getElements(
        @PathVariable
        String id,
        @RequestParam
        Long requiredQueryParam,
        @RequestParam(required = false, defaultValue = "dummyDefault")
        String optionalQueryParam,
        @RequestParam(required = false, defaultValue = "2")
        BigDecimal optionalQueryParam2,
        @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")
        Long xMyHeader,
        @RequestHeader(name = "X-Another-Header")
        String xAnotherHeader,
        @RequestHeader
        HttpHeaders httpHeaders) {
        return this.baseControllerDelegate.getElements(id, requiredQueryParam, optionalQueryParam, optionalQueryParam2, xMyHeader, xAnotherHeader, httpHeaders);
    }

}

Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec
Running com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest
2017-08-24 18:09:00 DEBUG [rules.MultipartMimeRequestTest] - -----------------------------------com.gen.test.BaseController.java-----------------------------------

package com.gen.test;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


/**
 * The BaseController class
 * (Generated with springmvc-raml-parser v.0.9.1)
 * 
 */
@Controller
@RequestMapping(value = "/api/base", produces = "application/json")
public class BaseController {


    /**
     * No description
     * 
     */
    @RequestMapping(value = "", method = RequestMethod.POST)
    public ResponseEntity<?> updateBase(
        @RequestParam
        MultipartFile file) {
        return null; //TODO Autogenerated Method Stub. Implement me please.
    }

}

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec
Running test.phoenixnap.oss.plugin.naming.NamingHelperTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec
Running test.phoenixnap.oss.plugin.naming.RamlVerifierTest
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerDowngradeToWarning 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:00 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param3 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:00 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param4 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-08-24 18:09:00 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param5 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-08-24 18:09:00 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param6 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: StyleCheckResourceDuplicateCommand 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/{somethingCoolId}/child GET from method: isAParticularSomethingCoolChild
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/child GET from method: isSomethingCoolChild
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: StyleCheckResourceDuplicateCommandSecond 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/status GET from method: isSomethingCoolStatus
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /somethingCool/{somethingCoolId}/status GET from method: isAParticularSomethingCoolStatus
2017-08-24 18:09:00 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /somethingCool
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{somethingCoolId}
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /somethingCool
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{somethingCoolId}
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /child
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /status
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:00 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:00 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /secondBase in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ContentTypeTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestAndResponseType POST from method: endpointWithRequestAndResponseType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithNoContentType GET from method: endpointWithNoContentType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestType POST from method: endpointWithRequestType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:00 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:00 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: MultiContentTypeTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestAndResponseType POST from method: endpointWithRequestAndResponseType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithNoContentType GET from method: endpointWithNoContentType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithRequestType POST from method: endpointWithRequestType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithDifferentResponseType
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/everything.
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Processing key application/json.
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestAndResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestAndResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithNoContentType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithNoContentType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action GET
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithRequestType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithRequestType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionContentTypeChecker] - Checking action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithGetAndPost
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerPostWarning 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-08-24 18:09:00 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter but found in Form Parameters  param5 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-08-24 18:09:00 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter but found in Form Parameters  param6 in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:00 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-08-24 18:09:00 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is different element2
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:00 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:00 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestController 
2017-08-24 18:09:00 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:00 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-08-24 18:09:00 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is missing element3
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:00 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:00 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ResponseBodyTestControllerError 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:01 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:01 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:01 DEBUG [checkers.ActionResponseBodySchemaChecker] - Found body for mime type application/test+json
2017-08-24 18:09:01 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Response Body field type is missing element3
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithResponseType in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithResponseType
2017-08-24 18:09:01 DEBUG [checkers.ActionResponseBodySchemaChecker] - Checking action POST
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: VerifierUriParamTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/{someUriParam}/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:01 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting URI Param resource: /{someUriParam} in CONTRACT instead of /{aURiParam} as expected
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{aURiParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{aURiParam}/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{aURiParam}/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{aURiParam}/endpointWithGetAndPost in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{aURiParam}/endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/{aURiParam}/endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting URI Param resource: /{aURiParam} in SOURCE instead of /{someUriParam} as expected
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{someUriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{someUriParam}/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{someUriParam}/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/{someUriParam}/endpointWithGetAndPost in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/{someUriParam}/endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/{someUriParam}/endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ParamTestControllerPostMissing 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} POST from method: endpointWithURIParamPost
2017-08-24 18:09:01 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param5
2017-08-24 18:09:01 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param5 in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param6
2017-08-24 18:09:01 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param6 in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: POST /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action POST
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 2 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:01 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:01 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: POST in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /secondBase/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /base
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGetAndPost in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGetAndPost
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: GET in CONTRACT
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected action missing: POST in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /secondBase
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /secondBase/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ActionExistenceChecker] - Checking Action /{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /secondBase/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:01 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /{differentNameParam} in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /{uriParam} in CONTRACT
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 3 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: VerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost GET from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGetAndPost POST from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: SecondVerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /secondBase/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParam
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ThirdVerifierTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /thirdBase/endpointWithGet GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [checkers.ResourceExistenceChecker] - Performing Resource Existence Checks
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in implementation
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Checking for any missing resources in RAML
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /base
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /secondBase
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.ResourceExistenceChecker] - Expecting and found resource: /{uriParam}
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Expected resource missing: /thirdBase in CONTRACT
2017-08-24 18:09:01 INFO [generation.RamlGenerator] - Generating Raml for test v0.0.1 from 1 annotated classes
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ParamTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithGet GET from method: endpointWithGet
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithURIParam/{uriParam} GET from method: endpointWithURIParamGet
2017-08-24 18:09:01 INFO [checkers.RamlCheckerResourceVisitorCoordinator] - Performing Resource and Action Visitor Checks
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using contract as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Skipping visiting action POST /base/endpointWithURIParam/{uriParam} in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Checking resources using implementation as reference. Warnings only
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithGet in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param1
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param2
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting resource: /base/endpointWithURIParam/{uriParam} in SOURCE
2017-08-24 18:09:01 DEBUG [checkers.RamlCheckerResourceVisitorCoordinator] - Visiting action: GET /base/endpointWithURIParam/{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - Checking Action GET
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param3
2017-08-24 18:09:01 ERROR [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param3 in CONTRACT
2017-08-24 18:09:01 DEBUG [checkers.ActionQueryParameterChecker] - ActionQueryParameterChecker Checking param param4
2017-08-24 18:09:01 WARN [checkers.RamlCheckerResourceVisitorCoordinator] - Missing Query Parameter.  param4 in CONTRACT
Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.548 sec
Running test.phoenixnap.oss.plugin.naming.RamlStyleCheckerTest
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /base
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGetAndPost
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /secondBase
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithGet
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /endpointWithURIParam
2017-08-24 18:09:01 DEBUG [checkers.ResourceUrlStyleChecker] - Checking resource /{uriParam}
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ignored
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /thisShouldBeIgnored
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /balls
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /balls
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoreMeId}
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /books
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /books
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{bookId}
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /houses
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /houses
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{houseId}
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ResponseBodySchemaStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: POST
2017-08-24 18:09:01 DEBUG [checkers.ActionSecurityResponseChecker] - Checking Action: GET
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ignored
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /thisShouldBeIgnored
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /ball
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /ball
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoremeId}
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /books
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /books
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{bookId}
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /house
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Collection Resource identified: /house
2017-08-24 18:09:01 DEBUG [checkers.ResourceCollectionPluralisationChecker] - Checking resource /{ignoreMeId}
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: PUT
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: DELETE
2017-08-24 18:09:01 DEBUG [checkers.ResponseCodeDefinitionStyleChecker] - Checking Action: GET
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.093 sec
Running test.phoenixnap.oss.plugin.naming.SpringMvcResourceParserTest
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: TestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} GET from method: getMethodSimpleParameterPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} POST from method: postMethodSimpleParameterPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/miscCases/{pathVariable} GET from method: getMethodMiscCasesPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/responseObject GET from method: postResponseObject
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/responseObject POST from method: postResponseObject
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/methodBodyIgnore PUT from method: putMethodBodyIgnore
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/descriptionTest/secondBlock/thirdBlock/stuff PUT from method: descriptionTest
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter POST from method: postMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBodyObject GET from method: postMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBodyObject POST from method: postMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll GET from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll POST from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll HEAD from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll PUT from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll PATCH from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll DELETE from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll OPTIONS from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethodAll TRACE from method: simpleMethodAllHttpMethods
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod POST from method: simplePostMethod
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter GET from method: getMethodSimpleParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody GET from method: getMethodBodyParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody POST from method: postMethodBodyParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter POST from method: postMethodSimpleParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter GET from method: getMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod GET from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: UriPrefixIgnoredController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint POST from method: secondEndpointAgain
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint GET from method: endpoint
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint GET from method: endpointAgain
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /the/url/that/should/be/ignored/base/endpoint POST from method: secondEndpoint
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: BugController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /forgotStuff/{somethingID}/resendStuff POST from method: forgotStuffResendStuff
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: MultipleContentTypeTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint POST from method: secondEndpointAgain
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint GET from method: endpoint
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint GET from method: endpointAgain
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpoint POST from method: secondEndpoint
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: WrappedResponseBodyTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType POST from method: endpointWithResponseType
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseType GET from method: anotherEndpointWithResponseType
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseTypeNonGeneric GET from method: endpointWithResponseTypeNonGeneric
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/endpointWithResponseTypeNonGeneric POST from method: anotherEndpointWithResponseTypeNonGeneric
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: ShorthandTestController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} GET from method: getMethodSimpleParameterPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter/{pathVariable} POST from method: postMethodSimpleParameterPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/miscCases/{pathVariable} GET from method: getMethodMiscCasesPathVariable
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/methodBodyIgnore PUT from method: putMethodBodyIgnore
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/descriptionTest/secondBlock/thirdBlock/stuff PUT from method: descriptionTest
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter POST from method: postMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod POST from method: simplePostMethod
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter GET from method: getMethodSimpleParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody GET from method: getMethodBodyParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameterBody POST from method: postMethodBodyParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/oneParameter POST from method: postMethodSimpleParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/twoParameter GET from method: getMethodTwoParameter
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base/simpleMethod GET from method: simpleGetMethod
2017-08-24 18:09:01 INFO [parser.ResourceParser] - Parsing resource: NoValueController 
2017-08-24 18:09:01 INFO [parser.SpringMvcResourceParser] - Added call: /base GET from method: simpleMethodAllHttpMethods
Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.335 sec
Running test.phoenixnap.oss.plugin.naming.SchemaHelperTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec
Running test.phoenixnap.oss.plugin.naming.BugfixTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 sec
Running test.phoenixnap.oss.plugin.naming.JavaDocEntryTest
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec

Results :

Tests run: 140, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Spring MVC to RAML Synchronizer Maven Plugin 0.9.1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ springmvc-raml-plugin ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:compile (default-compile) @ springmvc-raml-plugin ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-plugin-plugin:3.4:descriptor (default-descriptor) @ springmvc-raml-plugin ---
[INFO] Using 'UTF-8' encoding to read mojo metadata.
[INFO] Mojo extractor with id: java-javadoc found 0 mojo descriptors.
[INFO] Mojo extractor with id: java-annotations found 3 mojo descriptors.
[INFO] 
[INFO] --- maven-plugin-plugin:3.4:descriptor (mojo-descriptor) @ springmvc-raml-plugin ---
[INFO] Using 'UTF-8' encoding to read mojo metadata.
[INFO] Mojo extractor with id: java-javadoc found 0 mojo descriptors.
[INFO] Mojo extractor with id: java-annotations found 3 mojo descriptors.
[INFO] 
[INFO] --- maven-plugin-plugin:3.4:helpmojo (help-descriptor) @ springmvc-raml-plugin ---
[INFO] Using 'UTF-8' encoding to read mojo metadata.
[INFO] Mojo extractor with id: java-javadoc found 0 mojo descriptors.
[INFO] Mojo extractor with id: java-annotations found 3 mojo descriptors.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ springmvc-raml-plugin ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 6 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.3:testCompile (default-testCompile) @ springmvc-raml-plugin ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ springmvc-raml-plugin ---
[INFO] Surefire report directory: /root/workspace/phoenixnap/springmvc-raml-plugin/185748877/springmvc-raml-plugin/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.phoenixnap.oss.ramlapisync.plugin.PojoGenerationConfigTest
2017-08-24 18:09:08 INFO [naming.SchemaHelper] - Loading referenced schema sample.json
[debug] 
[debug] -----------------------------------------------------------
[debug] SampleController
[debug] 
com/test/samples/model/Sample.java
com/test/samples/model/TArrayRef.java
com/test/samples/model/Sample.java
com/test/samples/model/TArrayRef.java
com/test/samples/model/Sample.java
com/test/samples/model/TArrayRef.java
[debug] 
[debug] 
com/test/samples/SampleController.java
[info] Endpoint Generation Complete in:800ms
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.659 sec

Results :

Tests run: 4, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Spring MVC to RAML Synchronizer .................... SUCCESS [  0.002 s]
[INFO] Spring MVC to RAML Synchronizer Annotations ........ SUCCESS [  0.657 s]
[INFO] Spring MVC to RAML Synchronizer Parser ............. SUCCESS [  3.500 s]
[INFO] Spring MVC to RAML Synchronizer Maven Plugin ....... SUCCESS [  7.440 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11.959 s
[INFO] Finished at: 2017-08-24T18:09:09+02:00
[INFO] Final Memory: 38M/1168M
[INFO] ------------------------------------------------------------------------
