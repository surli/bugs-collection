storage.last24hours_average=SELECT \
          storage_domain_name AS name, \
          AVG( \
              CAST(used_disk_size_gb AS float) / (used_disk_size_gb + available_disk_size_gb) \
          ) * 100 AS avg \
      FROM \
          v4_2_statistics_storage_domains_resources_usage_hourly resources \
      INNER JOIN \
          v4_2_configuration_history_storage_domains storage \
      ON \
          storage.history_id = resources.storage_configuration_version \
      WHERE \
          NOT(available_disk_size_gb IS NULL AND used_disk_size_gb IS NULL) AND \
          storage_domain_type IN(0, 1) AND \
          resources.storage_domain_status = 1 AND \
          history_datetime >= (CURRENT_TIMESTAMP - INTERVAL '1 day') AND \
          history_datetime < CURRENT_TIMESTAMP \
          GROUP BY name
storage.hourly_history=SELECT \
            the_datetime AS the_date, \
            used_disk_size AS used \
      FROM \
      (\
            SELECT \
                history_datetime, \
                SUM(CAST(used_disk_size_gb AS float)) AS used_disk_size \
            FROM \
                v4_2_statistics_storage_domains_resources_usage_hourly resources \
            INNER JOIN \
                v4_2_configuration_history_storage_domains domains \
            ON \
                domains.history_id = resources.storage_configuration_version \
            WHERE \
                domains.storage_domain_type IN (0, 1) AND \
                resources.storage_domain_status = 1 AND \
                history_datetime >=  date_trunc('hour',CURRENT_TIMESTAMP) - INTERVAL '24 hours' AND \
                history_datetime < date_trunc('hour',CURRENT_TIMESTAMP) - INTERVAL '2 hour' \
                GROUP BY \
                    history_datetime \
            UNION \
            SELECT \
                history_datetime, \
                SUM(used_disk_size) as used_disk_size \
            FROM \
            (\
                SELECT \
                    domains.storage_domain_id, \
                    date_trunc('hour',history_datetime) AS history_datetime, \
                    AVG(CAST(used_disk_size_gb AS float)) AS used_disk_size \
                FROM \
                    v4_2_statistics_storage_domains_resources_usage_samples samples \
                INNER JOIN \
                    v4_2_configuration_history_storage_domains domains \
                ON \
                    domains.history_id = samples.storage_configuration_version \
                WHERE \
                    domains.storage_domain_type IN (0, 1) AND \
                    samples.storage_domain_status = 1 AND \
                    history_datetime >=  date_trunc('hour',CURRENT_TIMESTAMP) - INTERVAL '2 hours' AND \
                    history_datetime < date_trunc('hour',CURRENT_TIMESTAMP) + INTERVAL '1 minute' \
                GROUP BY \
                    domains.storage_domain_id, \
                    date_trunc('hour',history_datetime)\
                ) AS last_2_hours \
                GROUP BY \
                    history_datetime\
                ) AS a \
            RIGHT OUTER JOIN \
                calendar b \
            ON \
                a.history_datetime = b.the_datetime \
            WHERE \
                the_datetime >= date_trunc('hour',CURRENT_TIMESTAMP) - INTERVAL '24 hours' AND \
                the_datetime <= date_trunc('hour',CURRENT_TIMESTAMP) \
            ORDER BY \
                the_datetime
storage.last5_minutes_average=SELECT \
            SUM(used_disk_size) AS used \
      FROM \
      (\
            SELECT \
                AVG(CAST(used_disk_size_gb AS float)) AS used_disk_size \
            FROM \
                v4_2_statistics_storage_domains_resources_usage_samples samples \
            INNER JOIN \
                v4_2_configuration_history_storage_domains domains \
            ON \
                domains.history_id = samples.storage_configuration_version \
            WHERE \
                domains.storage_domain_type IN (0, 1) AND \
                samples.storage_domain_status = 1 AND \
                history_datetime >=  CURRENT_TIMESTAMP - INTERVAL '5 minute' AND \
                history_datetime < CURRENT_TIMESTAMP \
            GROUP BY \
                domains.storage_domain_id, \
                date_trunc('hour',history_datetime)\
      ) AS used_average
storage.total_count=SELECT \
            SUM(available_disk_size + used_disk_size) AS total \
      FROM \
      (\
            SELECT \
                AVG(CAST(used_disk_size_gb AS float)) AS used_disk_size, \
                AVG(CAST(available_disk_size_gb AS float)) AS available_disk_size \
            FROM \
                v4_2_statistics_storage_domains_resources_usage_samples samples \
            INNER JOIN \
                v4_2_configuration_history_storage_domains domains \
            ON \
                domains.history_id = samples.storage_configuration_version \
            WHERE \
                domains.storage_domain_type IN (0, 1) AND \
                samples.storage_domain_status = 1 AND \
                history_datetime >=  CURRENT_TIMESTAMP - INTERVAL '5 minute' AND \
                history_datetime < CURRENT_TIMESTAMP \
            GROUP BY \
                domains.storage_domain_id, \
                date_trunc('hour',history_datetime)\
      ) AS total_count
storage.utilization=SELECT \
            storage_domain_name AS name, \
            COALESCE(AVG(used_disk_size_gb), 0) AS used, \
            COALESCE(AVG(available_disk_size_gb), 0) AS available, \
            MAX(previous_used_disk_size_gb) AS previous_used, \
            AVG(CAST(samples.used_disk_size_gb AS float) / (samples.used_disk_size_gb + samples.available_disk_size_gb) * 100 ) \
            AS avg \
        FROM \
            v4_2_statistics_storage_domains_resources_usage_samples samples \
        INNER JOIN \
            v4_2_latest_configuration_storage_domains domains \
        ON \
            domains.storage_domain_id = samples.storage_domain_id \
        LEFT OUTER JOIN \
        (\
            SELECT \
                domains.storage_domain_id, \
                COALESCE(AVG(used_disk_size_gb), 0) AS previous_used_disk_size_gb \
            FROM \
                v4_2_statistics_storage_domains_resources_usage_samples samples \
            INNER JOIN \
                v4_2_configuration_history_storage_domains domains \
            ON \
                domains.history_id = samples.storage_configuration_version \
            WHERE \
                NOT (available_disk_size_gb IS NULL AND used_disk_size_gb IS NULL) AND \
                storage_domain_type IN (0, 1) AND \
                samples.storage_domain_status = 1 AND \
                history_datetime >= (CURRENT_TIMESTAMP - INTERVAL '10 minute') AND \
                history_datetime < (CURRENT_TIMESTAMP - INTERVAL '5 minute') \
            GROUP BY \
                domains.storage_domain_id\
        ) AS previous_trend \
        ON \
            domains.storage_domain_id = previous_trend.storage_domain_id \
        WHERE \
            NOT (available_disk_size_gb IS NULL AND used_disk_size_gb IS NULL) AND \
            storage_domain_type IN (0, 1) AND \
            samples.storage_domain_status = 1 AND \
            history_datetime >= (CURRENT_TIMESTAMP - INTERVAL '5 minute') AND \
            history_datetime < CURRENT_TIMESTAMP \
        GROUP BY \
            name \
        ORDER BY \
            avg DESC \
        LIMIT 10
storage.vm_utilization=SELECT \
            name, \
            AVG(total) AS total, \
            AVG(used) AS used, \
            MAX(previous_used) AS previous_used, \
            MAX(previous_total) AS previous_total, \
            MAX(vm_disk_usage_percent) AS usage_percent \
        FROM \
        (\
            SELECT \
                history_datetime, \
                vms.vm_name AS name, \
                SUM(vm_disk_size_mb) AS total, \
                SUM(vm_disk_actual_size_mb) AS used, \
                COALESCE(MAX(previous_actual_size), 0) AS previous_used, \
                COALESCE(MAX(previous_total_size), 0) AS previous_total, \
                CASE WHEN \
                    MAX(vm_disk_size_mb) = 0 \
                THEN \
                    0 \
                ELSE \
                    (CAST(MAX(vm_disk_actual_size_mb) AS DECIMAL)/ MAX(vm_disk_size_mb) * 100) \
                END AS vm_disk_usage_percent \
            FROM \
                v4_2_statistics_vms_disks_resources_usage_samples samples \
            INNER JOIN \
                v4_2_latest_configuration_vms_devices devices \
            ON \
                devices.device_id = vm_disk_id \
            INNER JOIN \
                v4_2_latest_configuration_vms vms \
            ON \
                vms.vm_id = devices.vm_id \
            INNER JOIN \
                v4_2_latest_configuration_vms_disks disks \
            ON \
                disks.vm_disk_id = samples.vm_disk_id \
            LEFT OUTER JOIN \
            (\
                SELECT \
                    vm_name, \
                    AVG(previous_actual_size) AS previous_actual_size, \
                    AVG(previous_total_size) AS previous_total_size \
                FROM \
                (\
                    SELECT \
                        history_datetime, \
                        vm_name, \
                        SUM(vm_disk_actual_size_mb) AS previous_actual_size, \
                        SUM(vm_disk_size_mb) AS previous_total_size \
                    FROM \
                        v4_2_statistics_vms_disks_resources_usage_samples samples \
                    INNER JOIN \
                        v4_2_latest_configuration_vms_devices devices \
                    ON \
                        devices.device_id = vm_disk_id \
                    INNER JOIN \
                        v4_2_latest_configuration_vms vms \
                    ON \
                        vms.vm_id = devices.vm_id \
                    INNER JOIN \
                        v4_2_latest_configuration_vms_disks disks \
                    ON \
                        disks.vm_disk_id = samples.vm_disk_id \
                    WHERE \
                        history_datetime >= (CURRENT_TIMESTAMP - INTERVAL '10 minute') AND \
                        history_datetime < (CURRENT_TIMESTAMP - INTERVAL '5 minute') \
                    GROUP BY \
                        history_datetime, vm_name\
                    ) AS previous_sum \
                GROUP BY vm_name\
                ) AS previous_trend \
                ON \
                    previous_trend.vm_name = vms.vm_name \
                WHERE \
                    history_datetime >= (CURRENT_TIMESTAMP - INTERVAL '5 minute') AND \
                    history_datetime < CURRENT_TIMESTAMP \
                GROUP BY \
                    history_datetime, vms.vm_name\
            ) AS prev_avg \
        GROUP BY \
            name \
        ORDER BY \
            usage_percent DESC \
        LIMIT 10

