{
  "_args": [
    [
      {
        "raw": "gulp-style-modules@https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
        "scope": null,
        "escapedName": "gulp-style-modules",
        "name": "gulp-style-modules",
        "rawSpec": "https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
        "spec": "https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
        "type": "remote"
      },
      "/root/workspace/sakaiproject/sakai/219225896/rubrics/services"
    ]
  ],
  "_from": "gulp-style-modules@>=0.1.0 <0.2.0",
  "_id": "gulp-style-modules@0.1.0",
  "_inCache": true,
  "_location": "/gulp-style-modules",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-style-modules@https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
    "scope": null,
    "escapedName": "gulp-style-modules",
    "name": "gulp-style-modules",
    "rawSpec": "https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
    "spec": "https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
  "_shasum": "780897e77ae1723267594b311e348f0e9dc36280",
  "_shrinkwrap": null,
  "_spec": "gulp-style-modules@https://registry.npmjs.org/gulp-style-modules/-/gulp-style-modules-0.1.0.tgz",
  "_where": "/root/workspace/sakaiproject/sakai/219225896/rubrics/services",
  "author": {
    "name": "Martin Kleinschrodt",
    "email": "martin@maklesoft.com"
  },
  "bugs": {
    "url": "https://github.com/maklesoft/gulp-style-modules/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.6",
    "through2": "^2.0.0"
  },
  "description": "Gulp plugin for wrapping css into style modules (as used by Polymer)",
  "devDependencies": {},
  "homepage": "http://github.com/maklesoft/gulp-style-modules/",
  "keywords": [
    "gulp",
    "css",
    "gulpplugin",
    "gulp-plugin",
    "style-modules",
    "polymer"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "gulp-style-modules",
  "optionalDependencies": {},
  "readme": "# gulp-style-modules\n\nA gulp plugin for wrapping css files into style modules as used by [Polymer](http://polymer-project.org)\n\n## Install\n\n```sh\n$ npm install --save-dev gulp-style-modules\n```\n\n## Examples\n\n```js\nvar stylemod = require('gulp-style-modules');\n\n// Wrap css files\ngulp.task(\"modularize-styles\", function() {\n    gulp.src(\"./src/**/*.css\")\n        .pipe(stylemod({\n            // All files will be named 'styles.html'\n            filename: \"styles\",\n            // Use '-css' suffix instead of '-styles' for module ids\n            moduleId: function(file) {\n                return path.basename(file.path, path.extname(file.path)) + \"-css\";\n            }\n        }))\n        .pipe(gulp.dest(\"./src\"));\n}\n\n// Use with preprocessor (e.g. stylus)\ngulp.task(\"modularize-styles\", function() {\n    gulp.src(\"./src/**/*.styl\")\n        .pipe(stylus({use: [nib()]}))\n        .pipe(stylemod())\n        .pipe(gulp.dest(\"./src\"));\n}\n```\n\n## Options / Defaults\n\n```js\n{\n    // string / function to be used for file names. Can be either a fixed string or a function\n    // that takes a [vinyl](https://github.com/gulpjs/vinyl) file object and returns a string\n    filename: function(file) {\n        return path.basename(file.path, path.extname(file.path)) + \"-styles\";\n    },\n    // string / function to be used for module ids. Can be either a fixed string or a function\n    // that takes a [vinyl](https://github.com/gulpjs/vinyl) file object and returns a string\n    moduleId: function(file) {\n        return path.basename(file.path, path.extname(file.path)) + \"-styles\";\n    }\n}\n```\n\n## LICENSE [MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/maklesoft/gulp-style-modules.git"
  },
  "version": "0.1.0"
}
