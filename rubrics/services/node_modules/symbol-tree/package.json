{
  "_args": [
    [
      {
        "raw": "symbol-tree@https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
        "scope": null,
        "escapedName": "symbol-tree",
        "name": "symbol-tree",
        "rawSpec": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
        "spec": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
        "type": "remote"
      },
      "/root/workspace/sakaiproject/sakai/219225896/rubrics/services"
    ]
  ],
  "_from": "symbol-tree@>=3.1.0 <4.0.0",
  "_id": "symbol-tree@3.2.1",
  "_inCache": true,
  "_location": "/symbol-tree",
  "_optional": true,
  "_phantomChildren": {},
  "_requested": {
    "raw": "symbol-tree@https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
    "scope": null,
    "escapedName": "symbol-tree",
    "name": "symbol-tree",
    "rawSpec": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
    "spec": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/jsdom"
  ],
  "_resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
  "_shasum": "8549dd1d01fa9f893c18cc9ab0b106b4d9b168cb",
  "_shrinkwrap": null,
  "_spec": "symbol-tree@https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.1.tgz",
  "_where": "/root/workspace/sakaiproject/sakai/219225896/rubrics/services",
  "author": {
    "name": "Joris van der Wel",
    "email": "joris@jorisvanderwel.com"
  },
  "bugs": {
    "url": "https://github.com/jsdom/js-symbol-tree/issues"
  },
  "dependencies": {},
  "description": "Turn any collection of objects into its own efficient tree or linked list using Symbol",
  "devDependencies": {
    "babel-eslint": "^7.1.1",
    "coveralls": "^2.11.15",
    "eslint": "^3.12.0",
    "eslint-plugin-import": "^2.2.0",
    "istanbul": "^0.4.5",
    "jsdoc-to-markdown": "^2.0.1",
    "tape": "^4.0.0"
  },
  "files": [
    "lib",
    "api.md"
  ],
  "homepage": "https://github.com/jsdom/js-symbol-tree#symbol-tree",
  "keywords": [
    "list",
    "queue",
    "stack",
    "linked-list",
    "tree",
    "es6",
    "dom",
    "symbol"
  ],
  "license": "MIT",
  "main": "lib/SymbolTree.js",
  "name": "symbol-tree",
  "optionalDependencies": {},
  "readme": "symbol-tree\n===========\n[![Travis CI Build Status](https://api.travis-ci.org/jsdom/js-symbol-tree.svg?branch=master)](https://travis-ci.org/jsdom/js-symbol-tree) [![Coverage Status](https://coveralls.io/repos/github/jsdom/js-symbol-tree/badge.svg?branch=master)](https://coveralls.io/github/jsdom/js-symbol-tree?branch=master)\n\nTurn any collection of objects into its own efficient tree or linked list using `Symbol`.\n\nThis library has been designed to provide an efficient backing data structure for DOM trees. You can also use this library as an efficient linked list. Any meta data is stored on your objects directly, which ensures any kind of insertion or deletion is performed in constant time. Because an ES6 `Symbol` is used, the meta data does not interfere with your object in any way.\n\nNode.js 4+, io.js and modern browsers are supported.\n\nExample\n-------\nA linked list:\n\n```javascript\nconst SymbolTree = require('symbol-tree');\nconst tree = new SymbolTree();\n\nlet a = {foo: 'bar'}; // or `new Whatever()`\nlet b = {foo: 'baz'};\nlet c = {foo: 'qux'};\n\ntree.insertBefore(b, a); // insert a before b\ntree.insertAfter(b, c); // insert c after b\n\nconsole.log(tree.nextSibling(a) === b);\nconsole.log(tree.nextSibling(b) === c);\nconsole.log(tree.previousSibling(c) === b);\n\ntree.remove(b);\nconsole.log(tree.nextSibling(a) === c);\n```\n\nA tree:\n\n```javascript\nconst SymbolTree = require('symbol-tree');\nconst tree = new SymbolTree();\n\nlet parent = {};\nlet a = {};\nlet b = {};\nlet c = {};\n\ntree.prependChild(parent, a); // insert a as the first child\ntree.appendChild(parent,c ); // insert c as the last child\ntree.insertAfter(a, b); // insert b after a, it now has the same parent as a\n\nconsole.log(tree.firstChild(parent) === a);\nconsole.log(tree.nextSibling(tree.firstChild(parent)) === b);\nconsole.log(tree.lastChild(parent) === c);\n\nlet grandparent = {};\ntree.prependChild(grandparent, parent);\nconsole.log(tree.firstChild(tree.firstChild(grandparent)) === a);\n```\n\nSee [api.md](api.md) for more documentation.\n\nTesting\n-------\nMake sure you install the dependencies first:\n\n    npm install\n\nYou can now run the unit tests by executing:\n\n    npm test\n\nThe line and branch coverage should be 100%.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jsdom/js-symbol-tree.git"
  },
  "scripts": {
    "ci": "istanbul cover test/SymbolTree.js --report lcovonly && cat ./coverage/lcov.info | coveralls",
    "documentation": "jsdoc2md --files lib/SymbolTree.js > ./jsdoc/api.md",
    "lint": "eslint lib test",
    "postci": "npm run posttest",
    "posttest": "npm run lint",
    "test": "istanbul cover test/SymbolTree.js"
  },
  "version": "3.2.1"
}
