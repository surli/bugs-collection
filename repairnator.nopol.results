nopolinfo #0
location: FailureLocation{className='com.graphhopper.gtfs.fare.FareTest', failingMethods=[com.graphhopper.gtfs.fare.FareTest#buyMoreThanOneTicketIfTripIsLongerThanAllowedOnOne, com.graphhopper.gtfs.fare.FareTest#canGoAllTheWayOnOneTicket, com.graphhopper.gtfs.fare.FareTest#withNoTransfersAndNoAlternativesBuyOneTicketForEachSegment], erroringMethods=[], failures=[FailureType{failureName='java.lang.AssertionError', failureDetail='Never found parameters that satisfied method assumptions.  Violated assumptions: [org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>]', isError=false}, FailureType{failureName='java.lang.AssertionError', failureDetail='Never found parameters that satisfied method assumptions.  Violated assumptions: [org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: We have a transfer: got: <1>, expected: a value greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: We have a transfer: got: <1>, expected: a value greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: We have a transfer: got: <1>, expected: a value greater than <1>, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: <0>, expected: a value equal to or greater than <2>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <4>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <2>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>, org.junit.AssumptionViolatedException: Only one fare.: got: <7>, expected: <1>]', isError=false}, FailureType{failureName='org.junit.experimental.theories.internal.ParameterizedAssertionError', failureDetail='withNoTransfersAndNoAlternativesBuyOneTicketForEachSegment("{plustransfer_fare=com.conveyal.gtfs.model.Fare@12028586, simple_fare=com.conveyal.gtfs.model.Fare@17776a8}" <from withTransfersOrWithout>, "com.graphhopper.gtfs.fare.Trip@69a10787" <from shortTripWithTwoSegments>)', isError=false}], nbFailures=3, nbErrors=0}
status: NOPATCH
dateEnd: Tue May 09 20:14:39 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/graphhopper/graphhopper/206263544/tools-lgpl/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/tools-lgpl/src/main/java, ./workspace/graphhopper/graphhopper/206263544/core/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/core/src/main/java, ./workspace/graphhopper/graphhopper/206263544/reader-osm/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/reader-osm/src/main/java, ./workspace/graphhopper/graphhopper/206263544/reader-gtfs/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/reader-gtfs/src/main/java, ./workspace/graphhopper/graphhopper/206263544/reader-overlay-data/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/reader-overlay-data/src/main/java, ./workspace/graphhopper/graphhopper/206263544/tools/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/tools/src/main/java, ./workspace/graphhopper/graphhopper/206263544/web/src/main/java, /root/./workspace/graphhopper/graphhopper/206263544/web/src/main/java], projectClasspath='[Ljava.net.URL;@3c291aad', projectTests=[com.graphhopper.gtfs.fare.FareTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



