nopolinfo #0
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...--------------------[-com.gen.test.PersonController.java-----------------------------------  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.0-SNAPSHOT)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity<List<com.gen.test.model.Person>> getPersons();      /**      * No description      *       */     public ResponseEntity<?> createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.0-SNAPSHOT)  *   */ @RestController @RequestMapping(value = "/api/persons", produces = "application/json") public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<List<com.gen.test.model.Person>> getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<?> createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  } ] > but was:<...--------------------[com.gen.test.PersonController.java-----------------------------------  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.0-SNAPSHOT)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity<List<com.gen.test.model.Person>> getPersons();      /**      * No description      *       */     public ResponseEntity<?> createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.0-SNAPSHOT)  *   */ @RestController @RequestMapping(value = "/api/persons", produces = "application/json") public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<List<com.gen.test.model.Person>> getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<?> createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  }] >', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Tue May 09 18:01:17 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/206687768/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@512d92b', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



