nopolinfo #0
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerStubRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerStubRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...-parser v.0.10.4)  *[  */ public interface BaseController {       /**      * No description      *      */     public Callable<ResponseEntity<?>> getBase();      /**      * Get base entity by ID      *      */     public Callable<ResponseEntity<NamedResponseType>> getBaseById(String id);      /**      * No description      *      */     public Callable<ResponseEntity<?>> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value = "", method = RequestMethod.GET)     public Callable<ResponseEntity<?>> getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *      */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public Callable<ResponseEntity<NamedResponseType>> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...> but was:<...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public Callable<ResponseEntity<?>> getBase();      /**      * Get base entity by ID      *       */     public Callable<ResponseEntity<NamedResponseType>> getBaseById(String id);      /**      * No description      *       */     public Callable<ResponseEntity<?>> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public Callable<ResponseEntity<?>> getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public Callable<ResponseEntity<NamedResponseType>> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader) {     ]        return null;...> but was:<...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader) { ]        return null;...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value = "", method = RequestMethod.GET)     public Callable<ResponseEntity<?>> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *      */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public Callable<NamedResponseType> getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *]      */     @Reques...> but was:<...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public Callable<ResponseEntity<?>> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public Callable<NamedResponseType> getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      * ]      */     @Reques...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...-parser v.0.10.4)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity<?> getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity<NamedResponseType> getBaseById(String id);      /**      * No description      *      */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...> but was:<...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity<?> getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity<NamedResponseType> getBaseById(String id);      /**      * No description      *       */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...>', isError=false}], nbFailures=4, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:06 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@4d0402b', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #1
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_configuration_disableArray, com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring3ControllerStubRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/files", produces = "application/json") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]> but was:<...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/files", produces = "application/json") public class FileController {       /**      * Create file.      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]> but was:<...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json") public class FileController {       /**      * Create file.      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json") @Validated] public class FileCo...> but was:<...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json")] public class FileCo...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json") @Validated] public class FileCo...> but was:<...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/files", produces = "application/json")] public class FileCo...>', isError=false}], nbFailures=4, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:09 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@4cffcc61', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #2
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerStubRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping("/api/base") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value = "", method = RequestMethod.POST)     public UpdateBaseResponse updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]> but was:<...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping("/api/base") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public UpdateBaseResponse updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...--------------------[  package com.gen.test;  import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ public interface BaseController {       /**      * No description      *      */     public ResponseEntity<UpdateBaseResponse> updateBase(UpdateBaseRequest updateBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping("/api/base") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<UpdateBaseResponse> updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return this.baseControllerDelegate.updateBase(updateBaseRequest);     }  } ] > but was:<...--------------------[  package com.gen.test;  import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity<UpdateBaseResponse> updateBase(UpdateBaseRequest updateBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping("/api/base") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<UpdateBaseResponse> updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return this.baseControllerDelegate.updateBase(updateBaseRequest);     }  }] >', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:11 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@3b39e79b', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #3
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerStubRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase(      @RequestHeader      HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...> but was:<...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...-parser v.0.10.4)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity<?> getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *]      */     @Reques...> but was:<...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity<?> getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/base", produces = "application/json") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      * ]      */     @Reques...>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:13 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@40b70f31', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #4
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerStubRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...> but was:<...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<... BaseController {   [ /**   * No description   *   */  public ResponseEntity<?> getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)  @ResponseBody     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *]      */     @Reques...> but was:<... BaseController {   [    /**      * No description      *       */     public ResponseEntity<?> getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity<NamedResponseType> getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     @ResponseBody     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      * ]      */     @Reques...>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:16 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@4f5bfbca', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #5
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode, com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerStubRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader) {     ]        return null;...> but was:<...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value = "/{id}/elements", method = RequestMethod.GET)     public ResponseEntity<?> getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required = false, defaultValue = "dummyDefault")         String optionalQueryParam,         @RequestParam(required = false, defaultValue = "2")         BigDecimal optionalQueryParam2,         @RequestHeader(name = "X-My-Header", required = false, defaultValue = "3")         Long xMyHeader,         @RequestHeader(name = "X-Another-Header")         String xAnotherHeader) { ]        return null;...>', isError=false}, FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<... BaseController {   [ /**   * No description   *   */  public ResponseEntity<?> getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity<NamedResponseType> getBaseById(String id);      /**      * No description      *      */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value = "", method = RequestMethod.GET)  public ResponseEntity<?> getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value = "/{id}", method = RequestMethod.GET)  @ResponseBody     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...> but was:<... BaseController {   [    /**      * No description      *       */     public ResponseEntity<?> getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity<NamedResponseType> getBaseById(String id);      /**      * No description      *       */     public ResponseEntity<?> getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<?> getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value = "/{id}", method = RequestMethod.GET)     @ResponseBody     public ResponseEntity<NamedResponseType> getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...>', isError=false}], nbFailures=2, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:18 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@40dcbf7', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #6
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...--------------------[  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity<List<com.gen.test.model.Person>> getPersons();      /**      * No description      *       */     public ResponseEntity<?> createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/persons", produces = "application/json") @Validated public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<List<com.gen.test.model.Person>> getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<?> createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  } ] > but was:<...--------------------[  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity<List<com.gen.test.model.Person>> getPersons();      /**      * No description      *       */     public ResponseEntity<?> createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value = "/api/persons", produces = "application/json") public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.GET)     public ResponseEntity<List<com.gen.test.model.Person>> getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value = "", method = RequestMethod.POST)     public ResponseEntity<?> createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  }] >', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:20 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@3b67c637', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #7
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...m.gen.test;  import [javax.validation.constraints.Pattern; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping("/api/base") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "/endpoint/{id}", method = RequestMethod.GET)     public ResponseEntity<?> getEndpointById(         @PathVariable         @Pattern(regexp = "^.{1,255}$")         String id,         @RequestParam         @Pattern(regexp = "^.{1,255}$")         String param1,         @RequestHeader(name = "X-My-Header", required = false)         @Pattern("^.{1,255}$"])         String xMy...> but was:<...m.gen.test;  import [org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping("/api/base") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value = "/endpoint/{id}", method = RequestMethod.GET)     public ResponseEntity<?> getEndpointById(         @PathVariable         String id,         @RequestParam         String param1,         @RequestHeader(name = "X-My-Header", required = false])         String xMy...>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:22 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@87f8146', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



nopolinfo #8
location: FailureLocation{className='com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest', failingMethods=[com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest#applySpring3ControllerStubRule_shouldCreate_validCode], erroringMethods=[], failures=[FailureType{failureName='org.junit.ComparisonFailure', failureDetail='expected:<...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") @Validated public class BaseController {       /**      * No description      *]      */     @Reques...> but was:<...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value = "/api/base", produces = "application/json") public class BaseController {       /**      * No description      * ]      */     @Reques...>', isError=false}], nbFailures=1, nbErrors=0}
status: NOPATCH
dateEnd: Fri May 12 09:51:24 CEST 2017
allocatedtime: 120minutes 
passingTime: 0minutes 
nb patches: 0
nopol context: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=false, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=COND_THEN_PRE, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='./z3_for_linux', projectSources=[./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-annotations/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser/src/main/java, ./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java, /root/./workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-plugin/src/main/java], projectClasspath='[Ljava.net.URL;@5d73aa0e', projectTests=[com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest], complianceLevel=8, outputFolder=null, json=false}
exception: null
nbStatements: 0
nbAngelicValues: 0
ignoreStatus: NOTHING_TO_IGNORE
----------



