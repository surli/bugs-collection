Release Notes -- Apache PDFBox -- Version 2.0.5

Introduction
------------

The Apache PDFBox library is an open source Java tool for working with PDF documents.

This is an incremental bugfix release based on the earlier 2.0.4 release. It contains
a couple of fixes and small improvements.

For more details on these changes and all the other fixes and improvements
included in this release, please refer to the following issues on the
PDFBox issue tracker at https://issues.apache.org/jira/browse/PDFBOX.

Bug

[PDFBOX-1031] - PDFMergerUtility - form fields disappear
[PDFBOX-1065] - PDF Link Annotations not working after Merge - PDFBox version 1.6.0
[PDFBOX-1100] - PDFMerger: Empty form fields
[PDFBOX-1662] - The Example RemoveAllText does not remove text from certain pdf
[PDFBOX-1958] - image mask outline with shading pattern is invisible
[PDFBOX-3538] - IOException over NumberFormatException on a valid PDF
[PDFBOX-3579] - Giant glyphs when rendering embedded fonts
[PDFBOX-3596] - FDFDocument.loadXFDF not working
[PDFBOX-3626] - StackOverflowException on a valid PDF
[PDFBOX-3627] - "/Prev loop at offset 77418" on a valid document
[PDFBOX-3634] - getSuffix() returns null for JBIG2
[PDFBOX-3638] - NullPointerException when setting form field value
[PDFBOX-3640] - java.awt.geom.NoninvertibleTransformException: Determinant is -0.0
[PDFBOX-3641] - ICC_ColorSpace usage is not thread safe
[PDFBOX-3642] - java.lang.ClassCastException is thrown when flattening form with a picture
[PDFBOX-3644] - PrintURLs example doesn't detect all URLs
[PDFBOX-3647] - Shading cut off
[PDFBOX-3648] - EOFException parsing PDFs with invalid xref offsets
[PDFBOX-3653] - NegativeArraySizeException thrown when converting PDF to Image (in TilingPaint.java)
[PDFBOX-3654] - Parse error reading embedded Type1 font
[PDFBOX-3656] - Problem when setting COSName.Off on radio button
[PDFBOX-3657] - Image rendering fails (1 bit per component image)
[PDFBOX-3659] - Can't create text with PDFType1Font.ZAPF_DINGBATS or PDFType1Font.SYMBOL without installed fonts
[PDFBOX-3661] - Problem With Malformed xref
[PDFBOX-3662] - Regression on this file as a result of PDFBOX-3446 fix
[PDFBOX-3663] - NullPointerException when signing a PDF with AcroForm and no fields
[PDFBOX-3664] - Iterate on all acroform fields, not just on root fields for signing
[PDFBOX-3665] - PDFBox text and images are blurry on HiDPI display
[PDFBOX-3668] - COSParser can't detect length of stream and then PDFRenderer does not render pages at some files
[PDFBOX-3672] - Exception on font PDType1Font.ZAPF_DINGBATS
[PDFBOX-3673] - Filled form fields appear gray instead of black after flatten
[PDFBOX-3676] - Bad glyph rendering of type 1 font
[PDFBOX-3677] - NullPointerException in Type1Parser.read
[PDFBOX-3681] - Text not rendered in mode 7 (3)
[PDFBOX-3682] - Wrong value stored for a radio button with an /Opts entry
[PDFBOX-3684] - PDFBox StackOverflowError on malformed files when merging
[PDFBOX-3685] - ClassCastException in SetMatrix() operator processor
[PDFBOX-3686] - IllegalArgumentException: Color parameter outside of expected range: Red Green Blue
[PDFBOX-3691] - ClassCastException in SetStrokingColorSpace.process
[PDFBOX-3692] - ArrayIndexOutOfBoundsException in SetTextRenderingMode.process
[PDFBOX-3693] - IllegalArgumentException in Type2CharString.java
[PDFBOX-3694] - java.io.IOException: Image stream is empty for inline image (2)
[PDFBOX-3695] - ClassCastException in SetRenderingIntent.process
[PDFBOX-3698] - Static Initialization Deadlock between COSNumber/COSInteger
[PDFBOX-3700] - OutOfMemoryException converting PDF to TIFF Images
[PDFBOX-3702] - ArrayIndexOutOfBoundsException in CCITTFaxDecoderStream.decode2D
[PDFBOX-3703] - ArrayIndexOutOfBoundsException in PDDeviceRGB.toRGB()
[PDFBOX-3705] - PDFBox PDF Print Operation eliminates (prints blank) MS Word Table tiling pattern
[PDFBOX-3708] - hasGlyph() contradicts encode()
[PDFBOX-3714] - PDF with blanks at the beginning can't be parsed

Improvement

[PDFBOX-3564] - SoftMask needs consider colormodel of input Image
[PDFBOX-3576] - Add getter methods to TextPosition
[PDFBOX-3635] - Remove workaround to avoid SSLHandshakeException
[PDFBOX-3652] - PDFMergerUtility: The source outline of merged PDF can be end up inside deep sub-outline if destination outline contain sub-outline
[PDFBOX-3660] - Handling of invalid annotation border
[PDFBOX-3675] - PreflightParser can only use main mem for scratch
[PDFBOX-3688] - Cache TilingPaint generation
[PDFBOX-3696] - Undeprecate CCITTFactory.createFromRandomAccess()

New Feature

[PDFBOX-3669] - PDPageContentStream: Add setMiterLimit()

Task

[PDFBOX-3704] - Update CCITTFaxDecoderStream.java from twelvemonkeys

Sub-task

[PDFBOX-3671] - Adjust signature field for rotated pages



Release Contents
----------------

This release consists of a single source archive packaged as a zip file.
The archive can be unpacked with the jar tool from your JDK installation.
See the README.txt file for instructions on how to build this release.

The source archive is accompanied by SHA1 and MD5 checksums and a PGP
signature that you can use to verify the authenticity of your download.
The public key used for the PGP signature can be found at
https://svn.apache.org/repos/asf/pdfbox/KEYS.

About Apache PDFBox
-------------------

Apache PDFBox is an open source Java library for working with PDF documents.
This project allows creation of new PDF documents, manipulation of existing
documents and the ability to extract content from documents. Apache PDFBox
also includes several command line utilities. Apache PDFBox is published
under the Apache License, Version 2.0.

For more information, visit http://pdfbox.apache.org/

About The Apache Software Foundation
------------------------------------

Established in 1999, The Apache Software Foundation provides organizational,
legal, and financial support for more than 100 freely-available,
collaboratively-developed Open Source projects. The pragmatic Apache License
enables individual and commercial users to easily deploy Apache software;
the Foundation's intellectual property framework limits the legal exposure
of its 2,500+ contributors.

For more information, visit http://www.apache.org/
