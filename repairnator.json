{
  "totalNumberSkippingTests": 0,
  "bugType": "failing_passing",
  "totalNumberErroringTests": 0,
  "repo": "graphhopper/graphhopper",
  "metrics": {
    "PatchCommitUrl": "http://github.com/graphhopper/graphhopper/commit/4a1256683102140c7dc4e56a5dc36c3fd71230ea",
    "NbFileTests": 292,
    "NbCPU": 32,
    "FreeMemory": 1271897976,
    "TotalMemory": 1633157120,
    "AngelicValuesByTest": {
      "com/graphhopper/gtfs/fare/FareTest": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuild": 724659400,
      "ComputeClasspath": 519702480,
      "ComputeTestDir": 698553056,
      "ResolveDependency": 688803496,
      "BuildProjectBuild": 810781408,
      "TestProjectBuild": 772821464,
      "ComputeSourceDir": 704851568,
      "InitRepoToPush": 522487488,
      "BuildProjectPreviousBuild": 676265352,
      "GatherTestInformationBuild": 761983832,
      "CloneRepository": 792956104,
      "NopolRepair": 914628632,
      "CheckoutPatchedBuild": 825838648,
      "PushIncriminatedBuild": 1356537936,
      "CommitPatch": 1271897976,
      "TestProjectPreviousBuild": 661639184,
      "GatherTestInformationPreviousBuild": 642087040
    },
    "ReproductionDate": "May 9, 2017 8:11:04 PM",
    "BuggyBuildId": 206263544,
    "PatchedBuilId": 206564536,
    "BuggyBuildURL": "http://travis-ci.org/graphhopper/graphhopper/builds/206263544",
    "PatchedBuildURL": "http://travis-ci.org/graphhopper/graphhopper/builds/206564536",
    "BuggyBuildDate": "Feb 28, 2017 6:45:10 PM",
    "PatchedBuildDate": "Mar 1, 2017 12:10:37 PM",
    "BugCommit": "fd809c42de8290dcfe0c954c9c5cdc8eb49a1e4c",
    "PatchCommit": "4a1256683102140c7dc4e56a5dc36c3fd71230ea",
    "PatchChangedFiles": 7,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 1315,
    "NbLibraries": 47,
    "NbFileApp": 634,
    "FailureNames": [
      "java.lang.AssertionError",
      "org.junit.experimental.theories.internal.ParameterizedAssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuild": 0,
      "ComputeClasspath": 3,
      "ComputeTestDir": 0,
      "ResolveDependency": 23,
      "BuildProjectBuild": 19,
      "TestProjectBuild": 60,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 2,
      "BuildProjectPreviousBuild": 102,
      "GatherTestInformationBuild": 0,
      "CloneRepository": 14,
      "NopolRepair": 13,
      "CheckoutPatchedBuild": 0,
      "PushIncriminatedBuild": 4,
      "CommitPatch": 4,
      "TestProjectPreviousBuild": 53,
      "GatherTestInformationPreviousBuild": 0
    },
    "BugCommitUrl": "http://github.com/graphhopper/graphhopper/commit/fd809c42de8290dcfe0c954c9c5cdc8eb49a1e4c",
    "NbFailingTests": 3
  },
  "bugCommit": "https://github.com/graphhopper/graphhopper/compare/7c75607295c9...fd809c42de82",
  "failingModule": "/root/workspace/graphhopper/graphhopper/206263544/reader-gtfs",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 3,
  "error-types": [
    "java.lang.AssertionError",
    "org.junit.experimental.theories.internal.ParameterizedAssertionError"
  ],
  "totalNumberRunningTests": 1315,
  "failing-test-cases": [
    {
      "className": "com.graphhopper.gtfs.fare.FareTest",
      "failingMethods": [
        "com.graphhopper.gtfs.fare.FareTest#buyMoreThanOneTicketIfTripIsLongerThanAllowedOnOne",
        "com.graphhopper.gtfs.fare.FareTest#canGoAllTheWayOnOneTicket",
        "com.graphhopper.gtfs.fare.FareTest#withNoTransfersAndNoAlternativesBuyOneTicketForEachSegment"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Never found parameters that satisfied method assumptions.  Violated assumptions: [org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e]",
          "isError": false
        },
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "Never found parameters that satisfied method assumptions.  Violated assumptions: [org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: We have a transfer: got: \u003c1\u003e, expected: a value greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: We have a transfer: got: \u003c1\u003e, expected: a value greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: We have a transfer: got: \u003c1\u003e, expected: a value greater than \u003c1\u003e, org.junit.AssumptionViolatedException: Fare allows the number of transfers we need for our trip.: got: \u003c0\u003e, expected: a value equal to or greater than \u003c2\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c4\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c2\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e, org.junit.AssumptionViolatedException: Only one fare.: got: \u003c7\u003e, expected: \u003c1\u003e]",
          "isError": false
        },
        {
          "failureName": "org.junit.experimental.theories.internal.ParameterizedAssertionError",
          "failureDetail": "withNoTransfersAndNoAlternativesBuyOneTicketForEachSegment(\"{plustransfer_fare\u003dcom.conveyal.gtfs.model.Fare@12028586, simple_fare\u003dcom.conveyal.gtfs.model.Fare@17776a8}\" \u003cfrom withTransfersOrWithout\u003e, \"com.graphhopper.gtfs.fare.Trip@69a10787\" \u003cfrom shortTripWithTwoSegments\u003e)",
          "isError": false
        }
      ],
      "nbFailures": 3,
      "nbErrors": 0
    }
  ]
}