{
  "totalNumberSkippingTests": 0,
  "bugType": "passing_passing",
  "totalNumberErroringTests": 0,
  "repo": "phoenixnap/springmvc-raml-plugin",
  "bugCommit": "https://github.com/phoenixnap/springmvc-raml-plugin/compare/f5d5f8dc245a...9f9dcc6eddfc",
  "failingModule": "/root/workspace/phoenixnap/springmvc-raml-plugin/236332202/springmvc-raml-parser",
  "hostname": "unknown host",
  "totalNumberFailingTests": 1,
  "error-types": [
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 202,
  "failing-test-cases": [
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue159RulesTest#applySpring4ClientStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...-------com.gen.test.[PersonManagerClient.java-----------------------------------  package com.gen.test;  import java.util.List; import com.gen.test.model.Manager; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.5)  *   */ public interface PersonManagerClient {       /**      * No description      *       */     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers();      /**      * No description      *       * @param manager The Request Body Payload      */     public ResponseEntity\u003cManager\u003e createPersonsManager(Manager manager);  } -----------------------------------com.gen.test.PersonManagerClientImpl.java-----------------------------------  package com.gen.test;  import java.util.ArrayList; import java.util.List; import com.gen.test.model.Manager; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Value; import org.springframework.core.ParameterizedTypeReference; import org.springframework.http.HttpEntity; import org.springframework.http.HttpHeaders; import org.springframework.http.HttpMethod; import org.springframework.http.MediaType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Component; import org.springframework.web.client.RestTemplate; import org.springframework.web.util.UriComponents; import org.springframework.web.util.UriComponentsBuilder;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.5)  *   */ @Component public class PersonManagerClientImpl     implements PersonManagerClient {      @Autowired     private RestTemplate restTemplate;     @Value(\"${client.url}\")     private String baseUrl;      /**      * No description      *       */     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers() {         HttpHeaders httpHeaders \u003d new HttpHeaders();         //  Add Accepts Headers and Body Content-Type         ArrayList\u003cMediaType\u003e acceptsList \u003d new ArrayList\u003cMediaType\u003e();         acceptsList.add(MediaType.valueOf(\"application/json\"));         httpHeaders.setAccept(acceptsList);         String url \u003d baseUrl.concat(\"/organization/persons/managers\");         UriComponentsBuilder builder \u003d UriComponentsBuilder.fromHttpUrl(url);         UriComponents uriComponents \u003d builder.build();         HttpEntity httpEntity \u003d new HttpEntity(httpHeaders);         class _P extends org.springframework.core.ParameterizedTypeReference\u003cjava.util.List\u003ccom.gen.test.model.Manager\u003e\u003e{};         ParameterizedTypeReference\u003cList\u003cManager\u003e\u003e typeReference \u003d new _P();         return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, typeReference);     }      /**      * No description      *       */     public ResponseEntity\u003cManager\u003e createPersonsManager(Manager manager) {         HttpHeaders httpHeaders \u003d new HttpHeaders();         //  Add Accepts Headers and Body Content-Type         ArrayList\u003cMediaType\u003e acceptsList \u003d new ArrayList\u003cMediaType\u003e();         httpHeaders.setContentType(MediaType.valueOf(\"application/json\"));         acceptsList.add(MediaType.valueOf(\"application/json\"));         httpHeaders.setAccept(acceptsList);         String url \u003d baseUrl.concat(\"/organization/persons/managers\");         UriComponentsBuilder builder \u003d UriComponentsBuilder.fromHttpUrl(url);         UriComponents uriComponents \u003d builder.build();         HttpEntity httpEntity \u003d new HttpEntity(manager, httpHeaders);         return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.POST, httpEntity, Manager.class);     }  }]\u003e but was:\u003c...-------com.gen.test.[ManagerClient.java-----------------------------------  package com.gen.test;  import java.util.List; import com.gen.test.model.Manager; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.5)  *   */ public interface ManagerClient {       /**      * No description      *       */     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers();      /**      * No description      *       * @param manager The Request Body Payload      */     public ResponseEntity\u003cManager\u003e createPersonsManager(Manager manager);  } -----------------------------------com.gen.test.PersonManagerClientImpl.java-----------------------------------  package com.gen.test;  import java.util.ArrayList; import java.util.List; import com.gen.test.model.Manager; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Value; import org.springframework.core.ParameterizedTypeReference; import org.springframework.http.HttpEntity; import org.springframework.http.HttpHeaders; import org.springframework.http.HttpMethod; import org.springframework.http.MediaType; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Component; import org.springframework.web.client.RestTemplate; import org.springframework.web.util.UriComponents; import org.springframework.web.util.UriComponentsBuilder;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.5)  *   */ @Component public class PersonManagerClientImpl     implements ManagerClient {      @Autowired     private RestTemplate restTemplate;     @Value(\"${client.url}\")     private String baseUrl;      /**      * No description      *       */     public ResponseEntity\u003cList\u003cManager\u003e\u003e getPersonsManagers() {         HttpHeaders httpHeaders \u003d new HttpHeaders();         //  Add Accepts Headers and Body Content-Type         ArrayList\u003cMediaType\u003e acceptsList \u003d new ArrayList\u003cMediaType\u003e();         acceptsList.add(MediaType.valueOf(\"application/json\"));         httpHeaders.setAccept(acceptsList);         String url \u003d baseUrl.concat(\"/organization/persons/managers\");         UriComponentsBuilder builder \u003d UriComponentsBuilder.fromHttpUrl(url);         UriComponents uriComponents \u003d builder.build();         HttpEntity httpEntity \u003d new HttpEntity(httpHeaders);         class _P extends org.springframework.core.ParameterizedTypeReference\u003cjava.util.List\u003ccom.gen.test.model.Manager\u003e\u003e{};         ParameterizedTypeReference\u003cList\u003cManager\u003e\u003e typeReference \u003d new _P();         return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.GET, httpEntity, typeReference);     }      /**      * No description      *       */     public ResponseEntity\u003cManager\u003e createPersonsManager(Manager manager) {         HttpHeaders httpHeaders \u003d new HttpHeaders();         //  Add Accepts Headers and Body Content-Type         ArrayList\u003cMediaType\u003e acceptsList \u003d new ArrayList\u003cMediaType\u003e();         httpHeaders.setContentType(MediaType.valueOf(\"application/json\"));         acceptsList.add(MediaType.valueOf(\"application/json\"));         httpHeaders.setAccept(acceptsList);         String url \u003d baseUrl.concat(\"/organization/persons/managers\");         UriComponentsBuilder builder \u003d UriComponentsBuilder.fromHttpUrl(url);         UriComponents uriComponents \u003d builder.build();         HttpEntity httpEntity \u003d new HttpEntity(manager, httpHeaders);         return this.restTemplate.exchange(uriComponents.encode().toUri(), HttpMethod.POST, httpEntity, Manager.class);     }  } ]\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}