{
  "totalNumberSkippingTests": 4,
  "bugType": "passing_passing",
  "totalNumberErroringTests": 0,
  "repo": "joel-costigliola/assertj-core",
  "metrics": {
    "FailureNames": [
      "java.lang.AssertionError"
    ],
    "StepsDurationsInSeconds": {
      "CheckoutBuggyBuildSourceCode": 0,
      "ComputeClasspath": 2,
      "ComputeTestDir": 0,
      "GatherTestInformationPreviousBuildSourceCode": 0,
      "ResolveDependency": 14,
      "BuildProjectBuild": 8,
      "BuildProjectPreviousBuildSourceCode": 16,
      "TestProjectBuild": 10,
      "ComputeSourceDir": 0,
      "InitRepoToPush": 2,
      "TestProjectPreviousBuildSourceCode": 10,
      "GatherTestInformationBuild": 0,
      "CloneRepository": 13,
      "CheckoutPatchedBuild": 0,
      "NopolRepair": 33,
      "PushIncriminatedBuild": 4,
      "CommitPatch": 4
    },
    "NbFailingTests": 6,
    "BugCommitUrl": "http://github.com/joel-costigliola/assertj-core/commit/72c6401d883bf08fc53809980fa8ac36fcc88537",
    "PatchCommitUrl": "http://github.com/joel-costigliola/assertj-core/commit/045735e968f07765c2d7b4298f9fdf855373ad9d",
    "ReproductionDate": "May 17, 2017 4:30:13 PM",
    "BuggyBuildId": 188164505,
    "PatchedBuilId": 188164604,
    "BuggyBuildURL": "http://travis-ci.org/joel-costigliola/assertj-core/builds/188164505",
    "PatchedBuildURL": "http://travis-ci.org/joel-costigliola/assertj-core/builds/188164604",
    "BuggyBuildDate": "Jan 2, 2017 5:18:06 AM",
    "PatchedBuildDate": "Jan 2, 2017 5:18:39 AM",
    "BugCommit": "72c6401d883bf08fc53809980fa8ac36fcc88537",
    "PatchCommit": "045735e968f07765c2d7b4298f9fdf855373ad9d",
    "PatchChangedFiles": 2,
    "PatchAddedLines": 0,
    "PatchDeletedLines": 0,
    "NbRunningTests": 8651,
    "NbLibraries": 9,
    "NbFileApp": 944,
    "NbFileTests": 4350,
    "NbCPU": 56,
    "FreeMemory": 3694407376,
    "TotalMemory": 4702863360,
    "AngelicValuesByTest": {
      "org/assertj/core/data/Percentage_withPercentage_with_Long_Test": 0,
      "org/assertj/core/data/Offset_offset_with_Double_Test": 0,
      "org/assertj/core/data/Offset_offset_with_Float_Test": 0,
      "org/assertj/core/data/Percentage_withPercentage_with_Double_Test": 0,
      "org/assertj/core/data/Percentage_withPercentage_with_Integer_Test": 0,
      "org/assertj/core/data/Offset_offset_with_Integer_Test": 0
    },
    "FreeMemoryByStep": {
      "CheckoutBuggyBuildSourceCode": 1197376152,
      "ComputeClasspath": 1210511736,
      "ComputeTestDir": 1247351608,
      "GatherTestInformationPreviousBuildSourceCode": 1458749104,
      "ResolveDependency": 1177669064,
      "BuildProjectBuild": 1649409752,
      "BuildProjectPreviousBuildSourceCode": 1168711728,
      "TestProjectBuild": 1594635392,
      "ComputeSourceDir": 1257344392,
      "InitRepoToPush": 1213198808,
      "TestProjectPreviousBuildSourceCode": 1129298600,
      "GatherTestInformationBuild": 1440739272,
      "CloneRepository": 1375286664,
      "CheckoutPatchedBuild": 1669328904,
      "NopolRepair": 1887675800,
      "PushIncriminatedBuild": 3904185336,
      "CommitPatch": 3694407376
    }
  },
  "bugCommit": "https://github.com/joel-costigliola/assertj-core/compare/6b622bd419a8...72c6401d883b",
  "failingModule": "/root/workspace/joel-costigliola/assertj-core/188164505",
  "hostname": "spirals-spoon3r",
  "totalNumberFailingTests": 6,
  "error-types": [
    "java.lang.AssertionError"
  ],
  "totalNumberRunningTests": 8651,
  "failing-test-cases": [
    {
      "className": "org.assertj.core.data.Percentage_withPercentage_with_Double_Test",
      "failingMethods": [
        "org.assertj.core.data.Percentage_withPercentage_with_Double_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\")\n     but: exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\" message was \"The percentage value \u003c-1.0\u003e should be \u003e 0.\"\nStacktrace was: java.lang.IllegalArgumentException: The percentage value \u003c-1.0\u003e should be \u003e 0.\n at org.assertj.core.data.Percentage.checkBoundaries(Percentage.java:46)\n at org.assertj.core.data.Percentage.withPercentage(Percentage.java:40)\n at org.assertj.core.data.Percentage_withPercentage_with_Double_Test.should_throw_error_if_value_is_negative(Percentage_withPercentage_with_Double_Test.java:45)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.data.Offset_offset_with_Double_Test",
      "failingMethods": [
        "org.assertj.core.data.Offset_offset_with_Double_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The value of the offset should be greater than or equal to zero\")\n     but: exception with message \"The value of the offset should be greater than or equal to zero\" message was \"The value of the offset should be greater than zero\"\nStacktrace was: java.lang.IllegalArgumentException: The value of the offset should be greater than zero\n at org.assertj.core.data.Offset.valueNotPositive(Offset.java:46)\n at org.assertj.core.data.Offset.offset(Offset.java:40)\n at org.assertj.core.data.Offset_offset_with_Double_Test.should_throw_error_if_value_is_negative(Offset_offset_with_Double_Test.java:43)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.data.Offset_offset_with_Integer_Test",
      "failingMethods": [
        "org.assertj.core.data.Offset_offset_with_Integer_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The value of the offset should be greater than or equal to zero\")\n     but: exception with message \"The value of the offset should be greater than or equal to zero\" message was \"The value of the offset should be greater than zero\"\nStacktrace was: java.lang.IllegalArgumentException: The value of the offset should be greater than zero\n at org.assertj.core.data.Offset.valueNotPositive(Offset.java:46)\n at org.assertj.core.data.Offset.offset(Offset.java:40)\n at org.assertj.core.data.Offset_offset_with_Integer_Test.should_throw_error_if_value_is_negative(Offset_offset_with_Integer_Test.java:43)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.data.Offset_offset_with_Float_Test",
      "failingMethods": [
        "org.assertj.core.data.Offset_offset_with_Float_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The value of the offset should be greater than or equal to zero\")\n     but: exception with message \"The value of the offset should be greater than or equal to zero\" message was \"The value of the offset should be greater than zero\"\nStacktrace was: java.lang.IllegalArgumentException: The value of the offset should be greater than zero\n at org.assertj.core.data.Offset.valueNotPositive(Offset.java:46)\n at org.assertj.core.data.Offset.offset(Offset.java:40)\n at org.assertj.core.data.Offset_offset_with_Float_Test.should_throw_error_if_value_is_negative(Offset_offset_with_Float_Test.java:43)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.data.Percentage_withPercentage_with_Long_Test",
      "failingMethods": [
        "org.assertj.core.data.Percentage_withPercentage_with_Long_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\")\n     but: exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\" message was \"The percentage value \u003c-1.0\u003e should be \u003e 0.\"\nStacktrace was: java.lang.IllegalArgumentException: The percentage value \u003c-1.0\u003e should be \u003e 0.\n at org.assertj.core.data.Percentage.checkBoundaries(Percentage.java:46)\n at org.assertj.core.data.Percentage.withPercentage(Percentage.java:40)\n at org.assertj.core.data.Percentage_withPercentage_with_Long_Test.should_throw_error_if_value_is_negative(Percentage_withPercentage_with_Long_Test.java:45)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "org.assertj.core.data.Percentage_withPercentage_with_Integer_Test",
      "failingMethods": [
        "org.assertj.core.data.Percentage_withPercentage_with_Integer_Test#should_throw_error_if_value_is_negative"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "failureDetail": "\nExpected: (an instance of java.lang.IllegalArgumentException and exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\")\n     but: exception with message \"The percentage value \u003c-1.0\u003e should be greater than or equal to zero\" message was \"The percentage value \u003c-1.0\u003e should be \u003e 0.\"\nStacktrace was: java.lang.IllegalArgumentException: The percentage value \u003c-1.0\u003e should be \u003e 0.\n at org.assertj.core.data.Percentage.checkBoundaries(Percentage.java:46)\n at org.assertj.core.data.Percentage.withPercentage(Percentage.java:40)\n at org.assertj.core.data.Percentage_withPercentage_with_Integer_Test.should_throw_error_if_value_is_negative(Percentage_withPercentage_with_Integer_Test.java:45)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}