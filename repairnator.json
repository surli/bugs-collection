{
  "totalNumberSkippingTests": 0,
  "bugType": "passing_passing",
  "totalNumberErroringTests": 0,
  "repo": "phoenixnap/springmvc-raml-plugin",
  "bugCommit": "https://github.com/phoenixnap/springmvc-raml-plugin/compare/e47dfdfb327f...ecab1a0c2681",
  "failingModule": "/root/workspace/phoenixnap/springmvc-raml-plugin/223539363/springmvc-raml-parser",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 19,
  "error-types": [
    "org.junit.ComparisonFailure"
  ],
  "totalNumberRunningTests": 197,
  "failing-test-cases": [
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.RequestBodyWithValidationTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public UpdateBaseResponse updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...--------------------[  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(\"/api/base\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public UpdateBaseResponse updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ public interface BaseController {       /**      * No description      *      */     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(UpdateBaseRequest updateBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return this.baseControllerDelegate.updateBase(updateBaseRequest);     }  } ] \u003e but was:\u003c...--------------------[  package com.gen.test;  import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(UpdateBaseRequest updateBaseRequest);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import javax.validation.Valid; import com.gen.test.model.UpdateBaseRequest; import com.gen.test.model.UpdateBaseResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(\"/api/base\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003cUpdateBaseResponse\u003e updateBase(         @Valid         @RequestBody         UpdateBaseRequest updateBaseRequest) {         return this.baseControllerDelegate.updateBase(updateBaseRequest);     }  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesHttpHeadersTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(      @RequestHeader      HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...\u003e but was:\u003c...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...-parser v.0.10.4)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesHttpHeadersTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) {     ]        return null;...\u003e but was:\u003c...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader,         @RequestHeader         HttpHeaders httpHeaders) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... BaseController {   [ /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase(       @RequestHeader       HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c... BaseController {   [    /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase(HttpHeaders httpHeaders);      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id, HttpHeaders httpHeaders);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader, HttpHeaders httpHeaders);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpHeaders; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase(         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBase(httpHeaders);     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id,         @RequestHeader         HttpHeaders httpHeaders) {         return this.baseControllerDelegate.getBaseById(id, httpHeaders);     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applyAsyncSpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring4ControllerRulesTest#applySpring4ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...-parser v.0.10.4)  *[  */ public interface BaseController {       /**      * No description      *      */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *      */     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(String id);      /**      * No description      *      */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *      */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase();      /**      * Get base entity by ID      *       */     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(String id);      /**      * No description      *       */     public Callable\u003cResponseEntity\u003c?\u003e\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import java.util.concurrent.Callable; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003cNamedResponseType\u003e\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) {     ]        return null;...\u003e but was:\u003c...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *      */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *      */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public Callable\u003cResponseEntity\u003c?\u003e\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public Callable\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...-parser v.0.10.4)  *[  */ public interface BaseController {    /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c...-parser v.0.10.4)  *[   */ public interface BaseController {       /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerDecoratorRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Spring3ControllerRulesTest#applySpring3ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;    /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {    /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *      */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) {     ]        return null;...\u003e but was:\u003c...org.springframework.[web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public NamedResponseType getBaseById(         @PathVariable         String id) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }      /**      * No description      *       */     @RequestMapping(value \u003d \"/{id}/elements\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getElements(         @PathVariable         String id,         @RequestParam         Long requiredQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"dummyDefault\")         String optionalQueryParam,         @RequestParam(required \u003d false, defaultValue \u003d \"2\")         BigDecimal optionalQueryParam2,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false, defaultValue \u003d \"3\")         Long xMyHeader,         @RequestHeader(name \u003d \"X-Another-Header\")         String xAnotherHeader) { ]        return null;...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c... BaseController {   [ /**   * No description   *   */  public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *      */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *      */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;   /**   * No description   *   */  @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)  public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();  }      /**      * Get base entity by ID      *      */  @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)  @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      *]      */     @Reques...\u003e but was:\u003c... BaseController {   [    /**      * No description      *       */     public ResponseEntity\u003c?\u003e getBase();      /**      * Get base entity by ID      *       */     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(String id);      /**      * No description      *       */     public ResponseEntity\u003c?\u003e getElements(String id, Long requiredQueryParam, String optionalQueryParam, BigDecimal optionalQueryParam2, Long xMyHeader, String xAnotherHeader);  } -----------------------------------com.gen.test.BaseControllerDecorator.java-----------------------------------  package com.gen.test;  import java.math.BigDecimal; import com.gen.test.model.NamedResponseType; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getBase() {         return this.baseControllerDelegate.getBase();     }      /**      * Get base entity by ID      *       */     @RequestMapping(value \u003d \"/{id}\", method \u003d RequestMethod.GET)     @ResponseBody     public ResponseEntity\u003cNamedResponseType\u003e getBaseById(         @PathVariable         String id) {         return this.baseControllerDelegate.getBaseById(id);     }      /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 2,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_configuration_disableArray",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring3ControllerStubRule_shouldCreate_validCode",
        "com.phoenixnap.oss.ramlapisync.generation.rules.Issue117RulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  }]\u003e but was:\u003c...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") public class FileController {       /**      * Create file.      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getFiles(         @RequestParam         String notArray,         @RequestParam         String[] stringArray) {         return null; //TODO Autogenerated Method Stub. Implement me please.     }  } ]\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated] public class FileCo...\u003e but was:\u003c...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\")] public class FileCo...\u003e",
          "isError": false
        },
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\") @Validated] public class FileCo...\u003e but was:\u003c...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/files\", produces \u003d \"application/json\")] public class FileCo...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 4,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.RamlEquivalenceRulesTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...--------------------[  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity\u003cList\u003ccom.gen.test.model.Person\u003e\u003e getPersons();      /**      * No description      *       */     public ResponseEntity\u003c?\u003e createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/persons\", produces \u003d \"application/json\") @Validated public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003ccom.gen.test.model.Person\u003e\u003e getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  } ] \u003e but was:\u003c...--------------------[  package com.gen.test;  import java.util.List; import org.springframework.http.ResponseEntity;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ public interface PersonController {       /**      * No description      *       */     public ResponseEntity\u003cList\u003ccom.gen.test.model.Person\u003e\u003e getPersons();      /**      * No description      *       */     public ResponseEntity\u003c?\u003e createPerson(com.gen.test.model.Person person);  } -----------------------------------com.gen.test.PersonControllerDecorator.java-----------------------------------  package com.gen.test;  import java.util.List; import javax.validation.Valid; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(value \u003d \"/api/persons\", produces \u003d \"application/json\") public class PersonControllerDecorator     implements PersonController {      @Autowired     private PersonController personControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.GET)     public ResponseEntity\u003cList\u003ccom.gen.test.model.Person\u003e\u003e getPersons() {         return this.personControllerDelegate.getPersons();     }      /**      * No description      *       */     @RequestMapping(value \u003d \"\", method \u003d RequestMethod.POST)     public ResponseEntity\u003c?\u003e createPerson(         @Valid         @RequestBody         com.gen.test.model.Person person) {         return this.personControllerDelegate.createPerson(person);     }  }] \u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.PatternConstraintTest#applySpring4ControllerDecoratorRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...m.gen.test;  import [javax.validation.constraints.Pattern; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.validation.annotation.Validated; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(\"/api/base\") @Validated public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/endpoint/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEndpointById(         @PathVariable         @Pattern(regexp \u003d \"^.{1,255}$\")         String id,         @RequestParam         @Pattern(regexp \u003d \"^.{1,255}$\")         String param1,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false)         @Pattern(\"^.{1,255}$\"])         String xMy...\u003e but was:\u003c...m.gen.test;  import [org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestHeader; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;   /**  * No description  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @RestController @RequestMapping(\"/api/base\") public class BaseControllerDecorator     implements BaseController {      @Autowired     private BaseController baseControllerDelegate;      /**      * No description      *       */     @RequestMapping(value \u003d \"/endpoint/{id}\", method \u003d RequestMethod.GET)     public ResponseEntity\u003c?\u003e getEndpointById(         @PathVariable         String id,         @RequestParam         String param1,         @RequestHeader(name \u003d \"X-My-Header\", required \u003d false])         String xMy...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    },
    {
      "className": "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest",
      "failingMethods": [
        "com.phoenixnap.oss.ramlapisync.generation.rules.MultipartMimeRequestTest#applySpring3ControllerStubRule_shouldCreate_validCode"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "org.junit.ComparisonFailure",
          "failureDetail": "expected:\u003c...org.springframework.[validation.annotation.Validated; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *  */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") @Validated public class BaseController {       /**      * No description      *]      */     @Reques...\u003e but was:\u003c...org.springframework.[web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.multipart.MultipartFile;   /**  * The BaseController class  * (Generated with springmvc-raml-parser v.0.10.4)  *   */ @Controller @RequestMapping(value \u003d \"/api/base\", produces \u003d \"application/json\") public class BaseController {       /**      * No description      * ]      */     @Reques...\u003e",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}